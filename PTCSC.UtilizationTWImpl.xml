<?xml version="1.0" encoding="UTF-8" standalone="no"?><Entities build="b313" majorVersion="9" minorVersion="4" modelPersistenceProviderPackage="MssqlPersistenceProviderPackage" revision="1" schemaVersion="1140" universal=""><StyleDefinitions/><Networks/><PersistenceProviderPackages/><Mashups/><ScriptFunctionLibraries/><Projects><Project artifactId="" aspect.projectType="Component" dependsOn="{&quot;extensions&quot;:&quot;PTC.Base:1.2.1&quot;,&quot;projects&quot;:&quot;PTCSC.Utilization:1.0.0&quot;}" description="" documentationContent="" groupId="" homeMashup="" lastModifiedDate="2023-11-30T19:04:01.541Z" minPlatformVersion="" name="PTCSC.UtilizationTWImpl" packageVersion="1.0.0" projectName="PTCSC.UtilizationTWImpl" publishResult="" state="DRAFT" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR" type="Organization"/><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR:PTCSC.UtilizationTWImpl.Admin_UG" type="OrganizationalUnit"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="Created Programmatically" timestamp="2022-10-28T19:44:04.478Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-11-01T13:36:43.040Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.538Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.542Z" user="Administrator"/></ConfigurationChanges></Project></Projects><Users/><DirectoryServices/><Widgets/><MediaEntities/><Groups><Group description="" documentationContent="" homeMashup="" lastModifiedDate="2023-11-30T19:04:01.547Z" name="PTCSC.UtilizationTWImpl.Admin_UG" projectName="PTCSC.UtilizationTWImpl" scimDisplayName="" scimExternalId="" scimId="" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR" type="Organization"/><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR:PTCSC.UtilizationTWImpl.Admin_UG" type="OrganizationalUnit"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><Members><Members><Member name="PTCDTS.Base.Permissions.ApplicationAdmin_UG" type="Group"/></Members></Members><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="Created Programmatically" timestamp="2022-10-28T19:44:04.544Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCSC.UtilizationTWImpl]" timestamp="2022-10-28T19:44:04.550Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-11-01T13:36:43.006Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.545Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.548Z" user="Administrator"/></ConfigurationChanges></Group><Group description="" documentationContent="" homeMashup="" lastModifiedDate="2023-11-30T19:04:01.563Z" name="PTCSC.UtilizationTWImpl.Default_UG" projectName="PTCSC.UtilizationTWImpl" scimDisplayName="" scimExternalId="" scimId="" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR" type="Organization"/><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR:PTCSC.UtilizationTWImpl.Admin_UG" type="OrganizationalUnit"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><Members><Members><Member name="PTCDTS.Base.Permissions.Default_UG" type="Group"/></Members></Members><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="Created Programmatically" timestamp="2022-10-28T19:44:04.542Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCSC.UtilizationTWImpl]" timestamp="2022-10-28T19:44:04.549Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-11-01T13:36:43.008Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.561Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.564Z" user="Administrator"/></ConfigurationChanges></Group></Groups><PersistenceProviders/><ModelTags/><LocalizationTables/><Dashboards/><StyleThemes/><DataShapes><DataShape baseDataShape="" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-12-07T19:48:16.322Z" name="PTCSC.UtilizationTWImpl.Config_DS" projectName="PTCSC.UtilizationTWImpl" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR" type="Organization"/><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR:PTCSC.UtilizationTWImpl.Admin_UG" type="OrganizationalUnit"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="true" baseType="INTEGER" description="" name="DaysToKeepWhenPurging" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" baseType="INTEGER" description="" name="HoursToLookBackOnUtilScreens" ordinal="2"/><FieldDefinition aspect.isPrimaryKey="false" baseType="INTEGER" description="Utilization screen refresh rate (seconds)" name="ScreenRefreshRate" ordinal="3"/><FieldDefinition aspect.isPrimaryKey="false" baseType="INTEGER" description="" name="UtilizationCriticalPercent" ordinal="4"/><FieldDefinition aspect.isPrimaryKey="false" baseType="INTEGER" description="" name="UtilizationWarningPercent" ordinal="5"/></FieldDefinitions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, projectName : updated&#10;" timestamp="2023-11-02T12:18:14.264Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : DaysToKeepWhenPurging : added, HoursToLookBackOnUtilScreens : added&#10;" timestamp="2023-11-02T12:21:20.898Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : DaysToKeepWhenPurging : updated&#10;" timestamp="2023-11-02T12:42:58.665Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.551Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.553Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : ScreenRefreshRate : added, ScreenRefreshRate : updated&#10;" timestamp="2023-12-07T16:15:21.130Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : Critical : added, Warning : added&#10;" timestamp="2023-12-07T19:45:23.668Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : Critical : deleted, Warning : deleted, UtilizationCriticalPercent : added, UtilizationWarningPercent : added&#10;" timestamp="2023-12-07T19:48:16.322Z" user="Administrator"/></ConfigurationChanges></DataShape></DataShapes><Things><Thing description="Data table to house utilization state records" documentationContent="Data table to house utilization state records" effectiveThingPackage="DataTableThing" enabled="true" homeMashup="DataTableEditor" identifier="" inheritedValueStream="" lastModifiedDate="2023-11-30T19:04:02.169Z" name="PTCSC.UtilizationTWImpl.UtilizationState_DT" projectName="PTCSC.UtilizationTWImpl" published="false" tags="" thingTemplate="DataTable" valueStream=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions><Permissions resourceName="*"><PropertyRead><Principal isPermitted="true" name="System" type="User"/></PropertyRead><PropertyWrite><Principal isPermitted="true" name="System" type="User"/></PropertyWrite><ServiceInvoke><Principal isPermitted="true" name="System" type="User"/></ServiceInvoke><EventInvoke/><EventSubscribe/></Permissions></RunTimePermissions><VisibilityPermissions><Visibility><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR" type="Organization"/><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR:PTCSC.UtilizationTWImpl.Admin_UG" type="OrganizationalUnit"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Data Thing Configuration" isMultiRow="false" name="DataThingSettings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="Persistence Provider Name" name="persistenceProvider" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><persistenceProvider><![CDATA[ThingworxPersistenceProvider]]></persistenceProvider></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Data Shape Configuration" isMultiRow="false" name="Settings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Data Shape" baseType="DATASHAPENAME" description="Data shape" name="dataShape" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><accumulatedDataShape><json><![CDATA[{"fieldDefinitions":{"UtilizationStateDescription":{"name":"UtilizationStateDescription","aspects":{},"description":"","baseType":"STRING","ordinal":2},"Utilized":{"name":"Utilized","aspects":{},"description":"","baseType":"BOOLEAN","ordinal":3},"UtilizationState":{"name":"UtilizationState","aspects":{"isPrimaryKey":true},"description":"","baseType":"STRING","ordinal":1},"IncludeInUtilizationCalculation":{"name":"IncludeInUtilizationCalculation","aspects":{},"description":"","baseType":"BOOLEAN","ordinal":0}}}]]></json></accumulatedDataShape><dataShape><![CDATA[PTCSC.Utilization.UtilizationState]]></dataShape></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Index Settings" isMultiRow="true" name="Indexes" ordinal="1"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Index Field Names" baseType="STRING" description="Index fields" name="fieldNames" ordinal="1"/><FieldDefinition aspect.friendlyName="Index Name" baseType="STRING" description="Index name" name="name" ordinal="0"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="Configurable options to tune Data Table performance" isMultiRow="false" name="PersistenceProviderCustomSettings" ordinal="2"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Persistence Provider Custom Settings Table" baseType="INFOTABLE" description="Persistence Provider Custom Config Table" name="customConfigTable" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><customConfigTable><infoTable><DataShape><FieldDefinitions/></DataShape><Rows/></infoTable></customConfigTable></Row></Rows></ConfigurationTable></ConfigurationTables><ThingShape><PropertyDefinitions/><ServiceDefinitions/><EventDefinitions/><ServiceMappings/><ServiceImplementations/><Subscriptions/></ThingShape><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations/><ImplementedShapes/><ThingProperties/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-11-01T13:36:43.048Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.624Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.626Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.121Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.124Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.127Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.129Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.132Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.135Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.137Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.140Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.142Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.171Z" user="Administrator"/></ConfigurationChanges></Thing><Thing description="Stream that houses utilization records" documentationContent="Stream that houses utilization records" effectiveThingPackage="StreamThing" enabled="true" homeMashup="StreamMashup" identifier="" inheritedValueStream="" lastModifiedDate="2023-11-30T19:04:02.118Z" name="PTCSC.UtilizationTWImpl.Utilization_SM" projectName="PTCSC.UtilizationTWImpl" published="false" tags="" thingTemplate="Stream" valueStream=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions><Permissions resourceName="*"><PropertyRead><Principal isPermitted="true" name="System" type="User"/></PropertyRead><PropertyWrite><Principal isPermitted="true" name="System" type="User"/></PropertyWrite><ServiceInvoke><Principal isPermitted="true" name="System" type="User"/></ServiceInvoke><EventInvoke/><EventSubscribe/></Permissions></RunTimePermissions><VisibilityPermissions><Visibility><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR" type="Organization"/><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR:PTCSC.UtilizationTWImpl.Admin_UG" type="OrganizationalUnit"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Data Thing Configuration" isMultiRow="false" name="DataThingSettings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="Persistence Provider Name" name="persistenceProvider" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><persistenceProvider><![CDATA[ThingworxPersistenceProvider]]></persistenceProvider></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Data Shape Configuration" isMultiRow="false" name="Settings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Data Shape" baseType="DATASHAPENAME" description="Data shape" name="dataShape" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><accumulatedDataShape><json><![CDATA[{"fieldDefinitions":{"ModifiedAt":{"name":"ModifiedAt","aspects":{},"description":"","baseType":"DATETIME","ordinal":2},"Comment":{"name":"Comment","aspects":{},"description":"","baseType":"STRING","ordinal":0},"EquipmentID":{"name":"EquipmentID","aspects":{"isPrimaryKey":false},"description":"","baseType":"STRING","ordinal":1},"ShiftID":{"name":"ShiftID","aspects":{"isPrimaryKey":false},"description":"","baseType":"STRING","ordinal":8},"ProductID":{"name":"ProductID","aspects":{"isPrimaryKey":false},"description":"","baseType":"STRING","ordinal":5},"UtilizationState":{"name":"UtilizationState","aspects":{},"description":"","baseType":"STRING","ordinal":9},"OperatorID":{"name":"OperatorID","aspects":{},"description":"","baseType":"STRING","ordinal":4},"ModifiedBy":{"name":"ModifiedBy","aspects":{},"description":"","baseType":"STRING","ordinal":3},"ReasonGroup":{"name":"ReasonGroup","aspects":{},"description":"","baseType":"STRING","ordinal":7},"Reason":{"name":"Reason","aspects":{},"description":"","baseType":"STRING","ordinal":6}}}]]></json></accumulatedDataShape><dataShape><![CDATA[PTCSC.Utilization.Utilization]]></dataShape></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Configurable options to tune Stream performance" isMultiRow="false" name="PersistenceProviderCustomSettings" ordinal="2"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Persistence Provider Custom Settings Table" baseType="INFOTABLE" description="Persistence Provider Custom Config Table" name="customConfigTable" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><customConfigTable><infoTable><DataShape><FieldDefinitions/></DataShape><Rows/></infoTable></customConfigTable></Row></Rows></ConfigurationTable></ConfigurationTables><ThingShape><PropertyDefinitions/><ServiceDefinitions/><EventDefinitions/><ServiceMappings/><ServiceImplementations/><Subscriptions/></ThingShape><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations/><ImplementedShapes/><ThingProperties/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-11-01T13:36:43.051Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.617Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.620Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.096Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.099Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.101Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.104Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.106Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.108Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.111Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.113Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.116Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.118Z" user="Administrator"/></ConfigurationChanges></Thing><Thing description="Data table to house machine codes by equipment" documentationContent="Data table to house machine codes by equipment" effectiveThingPackage="DataTableThing" enabled="true" homeMashup="DataTableEditor" identifier="" inheritedValueStream="" lastModifiedDate="2023-11-30T19:04:02.000Z" name="PTCSC.UtilizationTWImpl.MachineCode_DT" projectName="PTCSC.UtilizationTWImpl" published="false" tags="" thingTemplate="DataTable" valueStream=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions><Permissions resourceName="*"><PropertyRead><Principal isPermitted="true" name="System" type="User"/></PropertyRead><PropertyWrite><Principal isPermitted="true" name="System" type="User"/></PropertyWrite><ServiceInvoke><Principal isPermitted="true" name="System" type="User"/></ServiceInvoke><EventInvoke/><EventSubscribe/></Permissions></RunTimePermissions><VisibilityPermissions><Visibility><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR" type="Organization"/><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR:PTCSC.UtilizationTWImpl.Admin_UG" type="OrganizationalUnit"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Data Thing Configuration" isMultiRow="false" name="DataThingSettings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="Persistence Provider Name" name="persistenceProvider" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><persistenceProvider><![CDATA[ThingworxPersistenceProvider]]></persistenceProvider></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Data Shape Configuration" isMultiRow="false" name="Settings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Data Shape" baseType="DATASHAPENAME" description="Data shape" name="dataShape" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><accumulatedDataShape><json><![CDATA[{"fieldDefinitions":{"MachineCode":{"name":"MachineCode","aspects":{"isPrimaryKey":true},"description":"","baseType":"INTEGER","ordinal":1},"EquipmentID":{"name":"EquipmentID","aspects":{"isPrimaryKey":true},"description":"","baseType":"STRING","ordinal":0},"UtilizationState":{"name":"UtilizationState","aspects":{},"description":"","baseType":"STRING","ordinal":4},"ReasonGroup":{"name":"ReasonGroup","aspects":{},"description":"","baseType":"STRING","ordinal":3},"Reason":{"name":"Reason","aspects":{},"description":"","baseType":"STRING","ordinal":2}}}]]></json></accumulatedDataShape><dataShape><![CDATA[PTCSC.Utilization.MachineCode]]></dataShape></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Index Settings" isMultiRow="true" name="Indexes" ordinal="1"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Index Field Names" baseType="STRING" description="Index fields" name="fieldNames" ordinal="1"/><FieldDefinition aspect.friendlyName="Index Name" baseType="STRING" description="Index name" name="name" ordinal="0"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="Configurable options to tune Data Table performance" isMultiRow="false" name="PersistenceProviderCustomSettings" ordinal="2"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Persistence Provider Custom Settings Table" baseType="INFOTABLE" description="Persistence Provider Custom Config Table" name="customConfigTable" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><customConfigTable><infoTable><DataShape><FieldDefinitions/></DataShape><Rows/></infoTable></customConfigTable></Row></Rows></ConfigurationTable></ConfigurationTables><ThingShape><PropertyDefinitions/><ServiceDefinitions/><EventDefinitions/><ServiceMappings/><ServiceImplementations/><Subscriptions/></ThingShape><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations/><ImplementedShapes/><ThingProperties/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-11-01T13:36:43.052Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.576Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.578Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.977Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.980Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.983Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.985Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.987Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.990Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.992Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.995Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.998Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.001Z" user="Administrator"/></ConfigurationChanges></Thing><Thing aspect.isSystemObject="false" description="Implementation of PTCSC.Utilization using ThingWorx data objects" documentationContent="" effectiveThingPackage="ConfiguredThing" enabled="true" homeMashup="" identifier="" inheritedValueStream="" lastModifiedDate="2023-12-07T21:24:50.266Z" name="PTCSC.UtilizationTWImpl.Manager" projectName="PTCSC.UtilizationTWImpl" published="false" tags="" thingTemplate="PTCSC.UtilizationTWImpl.Manager_TT" valueStream=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR" type="Organization"/><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR:PTCSC.UtilizationTWImpl.Admin_UG" type="OrganizationalUnit"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Configuration table used to identify managers that the building block should use" isMultiRow="true" name="ManagerConfiguration" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="unique identifier for the manager that needs to be configured" name="id" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" aspect.thingShape="PTC.Base.CommonManagement_TS" baseType="THINGNAME" description="Name of the Manager Thing to be configured" name="managerThingName" ordinal="2"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="" isMultiRow="true" name="MashupConfiguration" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="unique identifier used to identify the thing or mashup that is being configured" name="id" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" baseType="MASHUPNAME" description="name of the mashup to configure" name="mashupName" ordinal="2"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="Configuration table for dynamic menus. Menu Items can be specified here and they will show up for the given menu name. " isMultiRow="true" name="MenuConfiguration" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="menuItemMashupName" ordinal="2"/><FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="" name="menuName" ordinal="3"/><FieldDefinition aspect.isPrimaryKey="false" baseType="INTEGER" description="An optional field to indicate the ordering of the menu items" name="menuOrderPreference" ordinal="5"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="Localization table key for the optional section that groups like menus together" name="menuSectionKey" ordinal="4"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="Localization table key for the menu label" name="menuTitleKey" ordinal="1"/><FieldDefinition aspect.dataShape="PTC.Base.ComponentMenuConfiguration" aspect.isPrimaryKey="false" baseType="INFOTABLE" description="" name="submenu" ordinal="6"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="Configuration table for any Things that need to be configured. This allows for OOTB things to be customized, and the new version that should be used can be configured here" isMultiRow="true" name="ThingConfiguration" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="unique identifier used to identify the thing or mashup that is being configured" name="id" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" baseType="THINGNAME" description="Name of the Thing entity or Mashup entity that is to be configured" name="thingName" ordinal="2"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="General configuration for the Utilization Application" isMultiRow="false" name="UtilizationConfiguration" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="true" baseType="INTEGER" description="" name="DaysToKeepWhenPurging" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" baseType="INTEGER" description="" name="HoursToLookBackOnUtilScreens" ordinal="2"/><FieldDefinition aspect.isPrimaryKey="false" baseType="INTEGER" description="Utilization screen refresh rate (seconds)" name="ScreenRefreshRate" ordinal="3"/><FieldDefinition aspect.isPrimaryKey="false" baseType="INTEGER" description="" name="UtilizationCriticalPercent" ordinal="4"/><FieldDefinition aspect.isPrimaryKey="false" baseType="INTEGER" description="" name="UtilizationWarningPercent" ordinal="5"/></FieldDefinitions></DataShape><Rows><Row><DaysToKeepWhenPurging>7</DaysToKeepWhenPurging><HoursToLookBackOnUtilScreens>6</HoursToLookBackOnUtilScreens><ScreenRefreshRate>30</ScreenRefreshRate><UtilizationCriticalPercent>50</UtilizationCriticalPercent><UtilizationWarningPercent>63</UtilizationWarningPercent></Row></Rows></ConfigurationTable></ConfigurationTables><ThingShape><PropertyDefinitions/><ServiceDefinitions/><EventDefinitions/><ServiceMappings/><ServiceImplementations/><Subscriptions/></ThingShape><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations/><ImplementedShapes/><ThingProperties/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-11-01T13:36:43.046Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddConfigurationTableDefinition" timestamp="2023-11-02T12:40:07.239Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2023-11-02T12:41:12.374Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="" timestamp="2023-11-02T12:41:12.704Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="configuration : UtilizationConfiguration : added&#10;" timestamp="2023-11-02T12:44:16.677Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="configuration : UtilizationConfiguration : removed&#10;" timestamp="2023-11-02T12:45:17.756Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="configuration : DaysToKeepWhenPurging : updated, HoursToLookBackOnUtilScreens : updated&#10;" timestamp="2023-11-02T13:05:37.230Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : test : service added&#10;" timestamp="2023-11-02T13:14:41.417Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : test : service updated&#10;" timestamp="2023-11-02T13:15:39.140Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : test : service updated, service deleted&#10;" timestamp="2023-11-02T13:22:46.845Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="configuration : HoursToLookBackOnUtilScreens : updated&#10;" timestamp="2023-11-02T13:22:55.720Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : test : service added&#10;" timestamp="2023-11-02T14:04:02.732Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : test : service updated&#10;" timestamp="2023-11-02T14:04:19.394Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : test : service updated, service deleted&#10;" timestamp="2023-11-02T14:08:29.192Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.586Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.589Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.010Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.012Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.014Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.016Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.017Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.019Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.020Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.022Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.024Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.026Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="configuration : ScreenRefreshRate : updated&#10;" timestamp="2023-12-07T16:16:47.011Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="configuration : ScreenRefreshRate : updated&#10;" timestamp="2023-12-07T16:32:02.106Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="configuration : ScreenRefreshRate : updated&#10;" timestamp="2023-12-07T16:32:32.007Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="configuration : UtilizationCriticalPercent : updated, UtilizationWarningPercent : updated&#10;" timestamp="2023-12-07T19:50:11.453Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="configuration : UtilizationWarningPercent : updated&#10;" timestamp="2023-12-07T20:45:35.876Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="configuration : UtilizationWarningPercent : updated&#10;" timestamp="2023-12-07T20:46:47.398Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="configuration : UtilizationCriticalPercent : updated&#10;" timestamp="2023-12-07T20:46:56.500Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="configuration : UtilizationCriticalPercent : updated&#10;" timestamp="2023-12-07T20:47:09.447Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="configuration : UtilizationWarningPercent : updated&#10;" timestamp="2023-12-07T21:24:31.958Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="configuration : UtilizationWarningPercent : updated&#10;" timestamp="2023-12-07T21:24:50.264Z" user="Administrator"/></ConfigurationChanges></Thing><Thing aspect.isSystemObject="false" description="Implementation of PTCSC.Utilization using ThingWorx data objects" documentationContent="" effectiveThingPackage="ConfiguredThing" enabled="true" homeMashup="" identifier="" inheritedValueStream="" lastModifiedDate="2023-12-11T22:01:41.586Z" name="PTCSC.UtilizationTWImpl.EntryPoint" projectName="PTCSC.UtilizationTWImpl" published="false" tags="" thingTemplate="PTCSC.UtilizationTWImpl.EntryPoint_TT" valueStream=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR" type="Organization"/><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR:PTCSC.UtilizationTWImpl.Admin_UG" type="OrganizationalUnit"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Configuration table to store the components core manager" isMultiRow="true" name="ComponentManager" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="unique identifier for the manager that needs to be configured" name="id" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" aspect.thingShape="PTC.Base.CommonManagement_TS" baseType="THINGNAME" description="Name of the Manager Thing to be configured" name="managerThingName" ordinal="2"/></FieldDefinitions></DataShape><Rows><Row><id><![CDATA[ComponentManager]]></id><managerThingName><![CDATA[PTCSC.UtilizationTWImpl.Manager]]></managerThingName></Row></Rows></ConfigurationTable></ConfigurationTables><ThingShape><PropertyDefinitions/><ServiceDefinitions/><EventDefinitions/><ServiceMappings/><ServiceImplementations><ServiceImplementation description="" handlerName="Script" name="DeployComponent"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// add visibility to the persistence provider so that stream entries can be updated
PersistenceProviders["ThingworxPersistenceProvider"].AddVisibilityPermission({
	principal: "PTCSC.Utilization.Default_OR" /* STRING */,
	principalType: "Organization" /* STRING */
});

// Populate configuration data tables
Things["PTCSC.UtilizationTWImpl.Manager"].AddOrUpdateInitialReasonData();
Things["PTCSC.UtilizationTWImpl.Manager"].AddOrUpdateInitialReasonGroupData();
Things["PTCSC.UtilizationTWImpl.Manager"].AddOrUpdateInitialUtilizationStateData();

// grab the configuration table
let table = Things["PTC.Base.Manager"].GetConfigurationTable({
	tableName: "DefaultGlobalManagerConfiguration" /* STRING */
});

// iterate the configuration table
var insertNewRow = true;
// if the uitlization row exists, update it
table.rows.toArray().forEach(row => {
    //Your code here
    if (row.id == "PTCSC.Utilization.Manager"){
        row.managerThingName = "PTCSC.UtilizationTWImpl.Manager";
        insertNewRow = false;
    }
});

// if the utilization row does not exist, add it
if (insertNewRow == true){
    var newRow = {};
    newRow.id = "PTCSC.Utilization.Manager";
    newRow.managerThingName = "PTCSC.UtilizationTWImpl.Manager";
    table.AddRow(newRow);
}

// set the configuration table
Things["PTC.Base.Manager"].SetMultiRowConfigurationTable({
	configurationTable: table /* INFOTABLE */,
	persistent: true /* BOOLEAN {"defaultValue":true} */,
	tableName: "DefaultGlobalManagerConfiguration" /* STRING */
});

// Return true as a default
var result = true;]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></ServiceImplementations><Subscriptions/></ThingShape><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations/><ImplementedShapes/><ThingProperties><componentType><Value><![CDATA[Implementation]]></Value><Timestamp>2022-10-28T19:44:04.533Z</Timestamp><Quality>GOOD</Quality></componentType><componentDeploymentState><Value><![CDATA[Configured]]></Value><Timestamp>2023-12-11T22:06:37.145Z</Timestamp><Quality>GOOD</Quality></componentDeploymentState><componentDefaultOrg><Value><![CDATA[PTCSC.UtilizationTWImpl.Default_OR]]></Value><Timestamp>2022-10-28T19:44:04.532Z</Timestamp><Quality>GOOD</Quality></componentDefaultOrg><dependentComponents><Value><infoTable><DataShape><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="Common name of the component" name="ComponentName" ordinal="0"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="Component's project name" name="ComponentProjectName" ordinal="0"/></FieldDefinitions></DataShape><Rows/></infoTable></Value><Timestamp>2023-11-01T13:36:43.201Z</Timestamp><Quality>GOOD</Quality></dependentComponents><deployComponentStatus><Value><infoTable><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="{}" aspect.isPrimaryKey="false" baseType="JSON" description="Information about the internal status." name="additionalInfo" ordinal="0"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="Name of the Component" name="name" ordinal="0"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="config status of the component" name="status" ordinal="0"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="Type of action." name="type" ordinal="0"/></FieldDefinitions></DataShape><Rows/></infoTable></Value><Timestamp>2023-11-01T13:36:43.202Z</Timestamp><Quality>GOOD</Quality></deployComponentStatus><componentDescription><Value><![CDATA[Implementation of PTCSC.Utilization using ThingWorx data objects]]></Value><Timestamp>2022-10-28T19:44:04.533Z</Timestamp><Quality>GOOD</Quality></componentDescription><migrateComponentStatus><Value><infoTable><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="{}" aspect.isPrimaryKey="false" baseType="JSON" description="Information about the internal status." name="additionalInfo" ordinal="0"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="Name of the Component" name="name" ordinal="0"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="config status of the component" name="status" ordinal="0"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="Type of action." name="type" ordinal="0"/></FieldDefinitions></DataShape><Rows/></infoTable></Value><Timestamp>2023-11-01T13:36:43.202Z</Timestamp><Quality>GOOD</Quality></migrateComponentStatus><componentDefaultUserGroup><Value><![CDATA[PTCSC.UtilizationTWImpl.Default_UG]]></Value><Timestamp>2022-10-28T19:44:04.532Z</Timestamp><Quality>GOOD</Quality></componentDefaultUserGroup><componentThumbnail><Value/><Timestamp>2023-11-01T13:36:43.202Z</Timestamp><Quality>GOOD</Quality></componentThumbnail><componentVersion><Value><![CDATA[1.0.1]]></Value><Timestamp>2023-12-11T22:01:37.655Z</Timestamp><Quality>GOOD</Quality></componentVersion><componentMainMashup><Value/><Timestamp>2023-11-01T13:36:43.202Z</Timestamp><Quality>GOOD</Quality></componentMainMashup><componentName><Value><![CDATA[PTCSC.UtilizationTWImpl]]></Value><Timestamp>2022-10-28T19:44:04.533Z</Timestamp><Quality>GOOD</Quality></componentName><upgradeComponentStatus><Value><infoTable><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="{}" aspect.isPrimaryKey="false" baseType="JSON" description="Information about the internal status." name="additionalInfo" ordinal="0"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="Name of the Component" name="name" ordinal="0"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="config status of the component" name="status" ordinal="0"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="Type of action." name="type" ordinal="0"/></FieldDefinitions></DataShape><Rows/></infoTable></Value><Timestamp>2023-11-01T13:36:43.202Z</Timestamp><Quality>GOOD</Quality></upgradeComponentStatus></ThingProperties><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-11-01T13:36:43.054Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.566Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.568Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.950Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.951Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.952Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.953Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.954Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.955Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.956Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.957Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.959Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:01.960Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : DeployComponent : service added&#10;" timestamp="2023-12-01T01:45:03.106Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : DeployComponent : service updated&#10;test : service added&#10;" timestamp="2023-12-04T21:41:24.289Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : test : output updated&#10;" timestamp="2023-12-04T21:45:48.013Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : test : service updated&#10;" timestamp="2023-12-04T21:47:00.154Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : test : service updated&#10;" timestamp="2023-12-04T21:49:44.308Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : test : service updated&#10;" timestamp="2023-12-04T21:52:36.846Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : test : service deleted&#10;" timestamp="2023-12-04T21:53:28.202Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : DeployComponent : service updated&#10;" timestamp="2023-12-07T15:52:48.759Z" user="Administrator"/></ConfigurationChanges></Thing><Thing description="Data table to house reason group records" documentationContent="Data table to house reason group records" effectiveThingPackage="DataTableThing" enabled="true" homeMashup="DataTableEditor" identifier="" inheritedValueStream="" lastModifiedDate="2023-11-30T19:04:02.093Z" name="PTCSC.UtilizationTWImpl.ReasonGroup_DT" projectName="PTCSC.UtilizationTWImpl" published="false" tags="" thingTemplate="DataTable" valueStream=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions><Permissions resourceName="*"><PropertyRead><Principal isPermitted="true" name="System" type="User"/></PropertyRead><PropertyWrite><Principal isPermitted="true" name="System" type="User"/></PropertyWrite><ServiceInvoke><Principal isPermitted="true" name="System" type="User"/></ServiceInvoke><EventInvoke/><EventSubscribe/></Permissions></RunTimePermissions><VisibilityPermissions><Visibility><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR" type="Organization"/><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR:PTCSC.UtilizationTWImpl.Admin_UG" type="OrganizationalUnit"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Data Thing Configuration" isMultiRow="false" name="DataThingSettings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="Persistence Provider Name" name="persistenceProvider" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><persistenceProvider><![CDATA[ThingworxPersistenceProvider]]></persistenceProvider></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Data Shape Configuration" isMultiRow="false" name="Settings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Data Shape" baseType="DATASHAPENAME" description="Data shape" name="dataShape" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><accumulatedDataShape><json><![CDATA[{"fieldDefinitions":{"ParentReasonGroup":{"name":"ParentReasonGroup","aspects":{},"description":"","baseType":"STRING","ordinal":0},"ReasonGroupDescription":{"name":"ReasonGroupDescription","aspects":{},"description":"","baseType":"STRING","ordinal":2},"ReasonGroup":{"name":"ReasonGroup","aspects":{"isPrimaryKey":true},"description":"","baseType":"STRING","ordinal":1}}}]]></json></accumulatedDataShape><dataShape><![CDATA[PTCSC.Utilization.ReasonGroup]]></dataShape></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Index Settings" isMultiRow="true" name="Indexes" ordinal="1"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Index Field Names" baseType="STRING" description="Index fields" name="fieldNames" ordinal="1"/><FieldDefinition aspect.friendlyName="Index Name" baseType="STRING" description="Index name" name="name" ordinal="0"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="Configurable options to tune Data Table performance" isMultiRow="false" name="PersistenceProviderCustomSettings" ordinal="2"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Persistence Provider Custom Settings Table" baseType="INFOTABLE" description="Persistence Provider Custom Config Table" name="customConfigTable" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><customConfigTable><infoTable><DataShape><FieldDefinitions/></DataShape><Rows/></infoTable></customConfigTable></Row></Rows></ConfigurationTable></ConfigurationTables><ThingShape><PropertyDefinitions/><ServiceDefinitions/><EventDefinitions/><ServiceMappings/><ServiceImplementations/><Subscriptions/></ThingShape><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations/><ImplementedShapes/><ThingProperties/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-11-01T13:36:43.044Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.609Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.613Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.069Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.072Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.075Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.077Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.080Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.083Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.085Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.088Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.090Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.093Z" user="Administrator"/></ConfigurationChanges></Thing><Thing description="Data table to house reason records" documentationContent="Data table to house reason records" effectiveThingPackage="DataTableThing" enabled="true" homeMashup="DataTableEditor" identifier="" inheritedValueStream="" lastModifiedDate="2023-11-30T19:04:02.065Z" name="PTCSC.UtilizationTWImpl.Reason_DT" projectName="PTCSC.UtilizationTWImpl" published="false" tags="" thingTemplate="DataTable" valueStream=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions><Permissions resourceName="*"><PropertyRead><Principal isPermitted="true" name="System" type="User"/></PropertyRead><PropertyWrite><Principal isPermitted="true" name="System" type="User"/></PropertyWrite><ServiceInvoke><Principal isPermitted="true" name="System" type="User"/></ServiceInvoke><EventInvoke/><EventSubscribe/></Permissions></RunTimePermissions><VisibilityPermissions><Visibility><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR" type="Organization"/><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR:PTCSC.UtilizationTWImpl.Admin_UG" type="OrganizationalUnit"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Data Thing Configuration" isMultiRow="false" name="DataThingSettings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="Persistence Provider Name" name="persistenceProvider" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><persistenceProvider><![CDATA[ThingworxPersistenceProvider]]></persistenceProvider></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Data Shape Configuration" isMultiRow="false" name="Settings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Data Shape" baseType="DATASHAPENAME" description="Data shape" name="dataShape" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><accumulatedDataShape><json><![CDATA[{"fieldDefinitions":{"ReasonDescription":{"name":"ReasonDescription","aspects":{},"description":"","baseType":"STRING","ordinal":2},"UtilizationState":{"name":"UtilizationState","aspects":{},"description":"","baseType":"STRING","ordinal":4},"ReasonGroup":{"name":"ReasonGroup","aspects":{},"description":"","baseType":"STRING","ordinal":3},"Failure":{"name":"Failure","aspects":{},"description":"","baseType":"BOOLEAN","ordinal":0},"Reason":{"name":"Reason","aspects":{"isPrimaryKey":true},"description":"","baseType":"STRING","ordinal":1}}}]]></json></accumulatedDataShape><dataShape><![CDATA[PTCSC.Utilization.Reason]]></dataShape></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Index Settings" isMultiRow="true" name="Indexes" ordinal="1"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Index Field Names" baseType="STRING" description="Index fields" name="fieldNames" ordinal="1"/><FieldDefinition aspect.friendlyName="Index Name" baseType="STRING" description="Index name" name="name" ordinal="0"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="Configurable options to tune Data Table performance" isMultiRow="false" name="PersistenceProviderCustomSettings" ordinal="2"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Persistence Provider Custom Settings Table" baseType="INFOTABLE" description="Persistence Provider Custom Config Table" name="customConfigTable" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><customConfigTable><infoTable><DataShape><FieldDefinitions/></DataShape><Rows/></infoTable></customConfigTable></Row></Rows></ConfigurationTable></ConfigurationTables><ThingShape><PropertyDefinitions/><ServiceDefinitions/><EventDefinitions/><ServiceMappings/><ServiceImplementations/><Subscriptions/></ThingShape><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations/><ImplementedShapes/><ThingProperties/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-11-01T13:36:43.042Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.604Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.607Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.038Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.041Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.043Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.046Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.049Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.052Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.056Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.059Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.062Z" user="Administrator"/><ConfigurationChange changeAction="DELETE" changeReason="DeleteRunTimePermissions" timestamp="2023-11-30T19:04:02.066Z" user="Administrator"/></ConfigurationChanges></Thing></Things><Logs/><Authenticators/><ThingPackages/><NotificationDefinitions/><ApplicationKeys/><StateDefinitions/><ThingTemplates><ThingTemplate aspect.isSystemObject="false" baseThingTemplate="PTCSC.Utilization.Manager_TT" description="Implementation of PTCSC.Utilization using ThingWorx data objects" documentationContent="" effectiveThingPackage="ConfiguredThing" homeMashup="" inheritedValueStream="" lastModifiedDate="2023-12-11T21:20:59.569Z" name="PTCSC.UtilizationTWImpl.Manager_TT" projectName="PTCSC.UtilizationTWImpl" tags="" thingPackage="" valueStream=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR" type="Organization"/><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR:PTCSC.UtilizationTWImpl.Admin_UG" type="OrganizationalUnit"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions><ConfigurationTableDefinition category="" dataShapeName="PTCSC.UtilizationTWImpl.Config_DS" description="General configuration for the Utilization Application" isHidden="false" isMultiRow="false" name="UtilizationConfiguration" ordinal="0" source="IMPORT"/></ConfigurationTableDefinitions><ConfigurationTables><ConfigurationTable dataShapeName="" description="Configuration table used to identify managers that the building block should use" isMultiRow="true" name="ManagerConfiguration" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="unique identifier for the manager that needs to be configured" name="id" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" aspect.thingShape="PTC.Base.CommonManagement_TS" baseType="THINGNAME" description="Name of the Manager Thing to be configured" name="managerThingName" ordinal="2"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="" isMultiRow="true" name="MashupConfiguration" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="unique identifier used to identify the thing or mashup that is being configured" name="id" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" baseType="MASHUPNAME" description="name of the mashup to configure" name="mashupName" ordinal="2"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="Configuration table for dynamic menus. Menu Items can be specified here and they will show up for the given menu name. " isMultiRow="true" name="MenuConfiguration" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="menuItemMashupName" ordinal="2"/><FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="" name="menuName" ordinal="3"/><FieldDefinition aspect.isPrimaryKey="false" baseType="INTEGER" description="An optional field to indicate the ordering of the menu items" name="menuOrderPreference" ordinal="5"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="Localization table key for the optional section that groups like menus together" name="menuSectionKey" ordinal="4"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="Localization table key for the menu label" name="menuTitleKey" ordinal="1"/><FieldDefinition aspect.dataShape="PTC.Base.ComponentMenuConfiguration" aspect.isPrimaryKey="false" baseType="INFOTABLE" description="" name="submenu" ordinal="6"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="Configuration table for any Things that need to be configured. This allows for OOTB things to be customized, and the new version that should be used can be configured here" isMultiRow="true" name="ThingConfiguration" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="unique identifier used to identify the thing or mashup that is being configured" name="id" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" baseType="THINGNAME" description="Name of the Thing entity or Mashup entity that is to be configured" name="thingName" ordinal="2"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="General configuration for the Utilization Application" isMultiRow="false" name="UtilizationConfiguration" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="true" baseType="INTEGER" description="" name="DaysToKeepWhenPurging" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" baseType="INTEGER" description="" name="HoursToLookBackOnUtilScreens" ordinal="2"/><FieldDefinition aspect.isPrimaryKey="false" baseType="INTEGER" description="Utilization screen refresh rate (seconds)" name="ScreenRefreshRate" ordinal="3"/><FieldDefinition aspect.isPrimaryKey="false" baseType="INTEGER" description="" name="UtilizationCriticalPercent" ordinal="4"/><FieldDefinition aspect.isPrimaryKey="false" baseType="INTEGER" description="" name="UtilizationWarningPercent" ordinal="5"/></FieldDefinitions></DataShape><Rows><Row><DaysToKeepWhenPurging>0</DaysToKeepWhenPurging><HoursToLookBackOnUtilScreens>0</HoursToLookBackOnUtilScreens><ScreenRefreshRate>0</ScreenRefreshRate><UtilizationCriticalPercent>0</UtilizationCriticalPercent><UtilizationWarningPercent>0</UtilizationWarningPercent></Row></Rows></ConfigurationTable></ConfigurationTables><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations/><ThingShape><PropertyDefinitions/><ServiceDefinitions/><EventDefinitions/><ServiceMappings/><ServiceImplementations><ServiceImplementation description="" handlerName="Script" name="AddDemoMachineCodeDataForEquipment"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[me.AddOrUpdateMachineCode({
	MachineCode: 1000 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Down" /* STRING */,
	ReasonGroup: "Downtime" /* STRING */,
	Reason: "Unknown" /* STRING */
});

me.AddOrUpdateMachineCode({
	MachineCode: 1001 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Down" /* STRING */,
	ReasonGroup: "Electrical" /* STRING */,
	Reason: "Electric Fault" /* STRING */
});

me.AddOrUpdateMachineCode({
	MachineCode: 1002 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Down" /* STRING */,
	ReasonGroup: "Mechanical" /* STRING */,
	Reason: "Conveyor Jam" /* STRING */
});

me.AddOrUpdateMachineCode({
	MachineCode: 1003 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Down" /* STRING */,
	ReasonGroup: "Mechanical" /* STRING */,
	Reason: "Feed Issues" /* STRING */
});

me.AddOrUpdateMachineCode({
	MachineCode: 1004 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Down" /* STRING */,
	ReasonGroup: "Mechanical" /* STRING */,
	Reason: "Tool Adjustment" /* STRING */
});

me.AddOrUpdateMachineCode({
	MachineCode: 1005 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Down" /* STRING */,
	ReasonGroup: "Misc" /* STRING */,
	Reason: "Cleaning" /* STRING */
});

me.AddOrUpdateMachineCode({
	MachineCode: 1006 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Idle" /* STRING */,
	ReasonGroup: "Idle" /* STRING */,
	Reason: "No Material" /* STRING */
});

me.AddOrUpdateMachineCode({
	MachineCode: 1007 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Idle" /* STRING */,
	ReasonGroup: "Idle" /* STRING */,
	Reason: "No Operator" /* STRING */
});

me.AddOrUpdateMachineCode({
	MachineCode: 1008 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Idle" /* STRING */,
	ReasonGroup: "Idle" /* STRING */,
	Reason: "Waiting on QC" /* STRING */
});

me.AddOrUpdateMachineCode({
	MachineCode: 1009 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Running" /* STRING */,
	ReasonGroup: "Running" /* STRING */,
	Reason: "Good Production" /* STRING */
});

me.AddOrUpdateMachineCode({
	MachineCode: 1010 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Setup" /* STRING */,
	ReasonGroup: "Setup" /* STRING */,
	Reason: "Die Change" /* STRING */
});

me.AddOrUpdateMachineCode({
	MachineCode: 1011 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Setup" /* STRING */,
	ReasonGroup: "Setup" /* STRING */,
	Reason: "Order Change" /* STRING */
});

me.AddOrUpdateMachineCode({
	MachineCode: 1012 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Setup" /* STRING */,
	ReasonGroup: "Setup" /* STRING */,
	Reason: "Part Change" /* STRING */
});

me.AddOrUpdateMachineCode({
	MachineCode: 1013 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Unavailable" /* STRING */,
	ReasonGroup: "Unavailable" /* STRING */,
	Reason: "Machine Not Online" /* STRING */
});

me.AddOrUpdateMachineCode({
	MachineCode: 1014 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Unavailable" /* STRING */,
	ReasonGroup: "Unavailable" /* STRING */,
	Reason: "Meetings" /* STRING */
});

me.AddOrUpdateMachineCode({
	MachineCode: 1015 /* INTEGER */,
	EquipmentID: EquipmentID /* STRING */,
	UtilizationState: "Unavailable" /* STRING */,
	ReasonGroup: "Unavailable" /* STRING */,
	Reason: "Scheduled Off" /* STRING */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="AddOrUpdateInitialReasonData"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// create empty infotable
var params = {
    infoTableName : "InfoTable",
    dataShapeName : "PTCSC.Utilization.Reason"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.Reason)
var ReasonData = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

// create and add recrods to infotable
// PTCSC.Utilization.Reason entry object
var newEntry = new Object();

newEntry.Reason = "Unknown"; // STRING [Primary Key]
newEntry.ReasonDescription = "Unknown Downtime"; // STRING
newEntry.ReasonGroup = "Downtime"; // STRING
newEntry.UtilizationState = "Down"; // STRING
newEntry.Failure = false; // BOOLEAN
ReasonData.AddRow(newEntry);

newEntry.Reason = "Electric Fault"; // STRING [Primary Key]
newEntry.ReasonDescription = "Electric Fault"; // STRING
newEntry.ReasonGroup = "Electrical"; // STRING
newEntry.UtilizationState = "Down"; // STRING
newEntry.Failure = true; // BOOLEAN
ReasonData.AddRow(newEntry);

newEntry.Reason = "Conveyor Jam"; // STRING [Primary Key]
newEntry.ReasonDescription = "Conveyor Jam"; // STRING
newEntry.ReasonGroup = "Mechanical"; // STRING
newEntry.UtilizationState = "Down"; // STRING
newEntry.Failure = false; // BOOLEAN
ReasonData.AddRow(newEntry);

newEntry.Reason = "Feed Issues"; // STRING [Primary Key]
newEntry.ReasonDescription = "Feed Issues"; // STRING
newEntry.ReasonGroup = "Mechanical"; // STRING
newEntry.UtilizationState = "Down"; // STRING
newEntry.Failure = false; // BOOLEAN
ReasonData.AddRow(newEntry);

newEntry.Reason = "Tool Adjustment"; // STRING [Primary Key]
newEntry.ReasonDescription = "Tool Adjustment"; // STRING
newEntry.ReasonGroup = "Mechanical"; // STRING
newEntry.UtilizationState = "Down"; // STRING
newEntry.Failure = false; // BOOLEAN
ReasonData.AddRow(newEntry);

newEntry.Reason = "Cleaning"; // STRING [Primary Key]
newEntry.ReasonDescription = "Required machine cleaning"; // STRING
newEntry.ReasonGroup = "Misc"; // STRING
newEntry.UtilizationState = "Down"; // STRING
newEntry.Failure = false; // BOOLEAN
ReasonData.AddRow(newEntry);

newEntry.Reason = "No Material"; // STRING [Primary Key]
newEntry.ReasonDescription = "Waiting on Raw Materials"; // STRING
newEntry.ReasonGroup = "Idle"; // STRING
newEntry.UtilizationState = "Idle"; // STRING
newEntry.Failure = false; // BOOLEAN
ReasonData.AddRow(newEntry);

newEntry.Reason = "No Operator"; // STRING [Primary Key]
newEntry.ReasonDescription = "Waiting on Machine Labor Resources"; // STRING
newEntry.ReasonGroup = "Idle"; // STRING
newEntry.UtilizationState = "Idle"; // STRING
newEntry.Failure = false; // BOOLEAN
ReasonData.AddRow(newEntry);

newEntry.Reason = "Waiting on QC"; // STRING [Primary Key]
newEntry.ReasonDescription = "Waiting on QC"; // STRING
newEntry.ReasonGroup = "Idle"; // STRING
newEntry.UtilizationState = "Idle"; // STRING
newEntry.Failure = false; // BOOLEAN
ReasonData.AddRow(newEntry);

newEntry.Reason = "Good Production"; // STRING [Primary Key]
newEntry.ReasonDescription = "Running as Expected"; // STRING
newEntry.ReasonGroup = "Running"; // STRING
newEntry.UtilizationState = "Running"; // STRING
newEntry.Failure = false; // BOOLEAN
ReasonData.AddRow(newEntry);

newEntry.Reason = "Part Change"; // STRING [Primary Key]
newEntry.ReasonDescription = "Part change as part of setup"; // STRING
newEntry.ReasonGroup = "Setup"; // STRING
newEntry.UtilizationState = "Setup"; // STRING
newEntry.Failure = false; // BOOLEAN
ReasonData.AddRow(newEntry);

newEntry.Reason = "Order Change"; // STRING [Primary Key]
newEntry.ReasonDescription = "Order change as part of setup"; // STRING
newEntry.ReasonGroup = "Setup"; // STRING
newEntry.UtilizationState = "Setup"; // STRING
newEntry.Failure = false; // BOOLEAN
ReasonData.AddRow(newEntry);

newEntry.Reason = "Die Change"; // STRING [Primary Key]
newEntry.ReasonDescription = "Die change as part of setup"; // STRING
newEntry.ReasonGroup = "Setup"; // STRING
newEntry.UtilizationState = "Setup"; // STRING
newEntry.Failure = false; // BOOLEAN
ReasonData.AddRow(newEntry);

newEntry.Reason = "Machine Not Online"; // STRING [Primary Key]
newEntry.ReasonDescription = "Machine not connected"; // STRING
newEntry.ReasonGroup = "Unavailable"; // STRING
newEntry.UtilizationState = "Unavailable"; // STRING
newEntry.Failure = false; // BOOLEAN
ReasonData.AddRow(newEntry);

newEntry.Reason = "Meetings"; // STRING [Primary Key]
newEntry.ReasonDescription = "Required Employee Meetings"; // STRING
newEntry.ReasonGroup = "Unavailable"; // STRING
newEntry.UtilizationState = "Unavailable"; // STRING
newEntry.Failure = false; // BOOLEAN
ReasonData.AddRow(newEntry);

newEntry.Reason = "Scheduled Off"; // STRING [Primary Key]
newEntry.ReasonDescription = "Scheduled Off - Weekend or Holiday"; // STRING
newEntry.ReasonGroup = "Unavailable"; // STRING
newEntry.UtilizationState = "Unavailable"; // STRING
newEntry.Failure = false; // BOOLEAN
ReasonData.AddRow(newEntry);

// add infotable records to data table
Things["PTCSC.UtilizationTWImpl.Reason_DT"].AddOrUpdateDataTableEntries({
	sourceType: undefined /* STRING */,
	values: ReasonData /* INFOTABLE */,
	location: undefined /* LOCATION */,
	source: undefined /* STRING */,
	tags: undefined /* TAGS */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="AddOrUpdateInitialReasonGroupData"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// create empty infotable
var params = {
    infoTableName : "InfoTable",
    dataShapeName : "PTCSC.Utilization.ReasonGroup"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.ReasonGroup)
var ReasonGroupData = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

// create and add recrods to infotable
var newEntry = new Object();

newEntry.ReasonGroup = "Downtime"; // STRING [Primary Key]
newEntry.ReasonGroupDescription = "General Group for Downtime"; // STRING
newEntry.ParentReasonGroup = ""; // STRING
ReasonGroupData.AddRow(newEntry);

newEntry.ReasonGroup = "Electrical"; // STRING [Primary Key]
newEntry.ReasonGroupDescription = "Electrical Downtime Reasons"; // STRING
newEntry.ParentReasonGroup = "Downtime"; // STRING
ReasonGroupData.AddRow(newEntry);

newEntry.ReasonGroup = "Mechanical"; // STRING [Primary Key]
newEntry.ReasonGroupDescription = "Mechanical Downtime Reasons"; // STRING
newEntry.ParentReasonGroup = "Downtime"; // STRING
ReasonGroupData.AddRow(newEntry);

newEntry.ReasonGroup = "Misc"; // STRING [Primary Key]
newEntry.ReasonGroupDescription = "Misc Downtime Reasons"; // STRING
newEntry.ParentReasonGroup = "Downtime"; // STRING
ReasonGroupData.AddRow(newEntry);

newEntry.ReasonGroup = "Idle"; // STRING [Primary Key]
newEntry.ReasonGroupDescription = "General Group for Idle"; // STRING
newEntry.ParentReasonGroup = ""; // STRING
ReasonGroupData.AddRow(newEntry);

newEntry.ReasonGroup = "Running"; // STRING [Primary Key]
newEntry.ReasonGroupDescription = "General Group for Running"; // STRING
newEntry.ParentReasonGroup = ""; // STRING
ReasonGroupData.AddRow(newEntry);

newEntry.ReasonGroup = "Setup"; // STRING [Primary Key]
newEntry.ReasonGroupDescription = "General Group for Setup"; // STRING
newEntry.ParentReasonGroup = ""; // STRING
ReasonGroupData.AddRow(newEntry);

newEntry.ReasonGroup = "Unavailable"; // STRING [Primary Key]
newEntry.ReasonGroupDescription = "General Group for Unavailable"; // STRING
newEntry.ParentReasonGroup = ""; // STRING
ReasonGroupData.AddRow(newEntry);

// add infotable records to data table
Things["PTCSC.UtilizationTWImpl.ReasonGroup_DT"].AddOrUpdateDataTableEntries({
	sourceType: undefined /* STRING */,
	values: ReasonGroupData /* INFOTABLE */,
	location: undefined /* LOCATION */,
	source: undefined /* STRING */,
	tags: undefined /* TAGS */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="AddOrUpdateInitialUtilizationStateData"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// create empty infotable
var params = {
    infoTableName : "InfoTable",
    dataShapeName : "PTCSC.Utilization.UtilizationState"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.UtilizationState)
var UtilizationStateData = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

// create and add recrods to infotable
var newEntry = new Object();

newEntry.UtilizationState = "Down"; // STRING [Primary Key]
newEntry.UtilizationStateDescription = "Machine scheduled or available, but faulted"; // STRING
newEntry.IncludeInUtilizationCalculation = true; // BOOLEAN
newEntry.Utilized = false; // BOOLEAN
UtilizationStateData.AddRow(newEntry);

newEntry.UtilizationState = "Idle"; // STRING [Primary Key]
newEntry.UtilizationStateDescription = "Machine scheduled or available, but not running"; // STRING
newEntry.IncludeInUtilizationCalculation = true; // BOOLEAN
newEntry.Utilized = false; // BOOLEAN
UtilizationStateData.AddRow(newEntry);

newEntry.UtilizationState = "Running"; // STRING [Primary Key]
newEntry.UtilizationStateDescription = "Machine running"; // STRING
newEntry.IncludeInUtilizationCalculation = true; // BOOLEAN
newEntry.Utilized = true; // BOOLEAN
UtilizationStateData.AddRow(newEntry);

newEntry.UtilizationState = "Setup"; // STRING [Primary Key]
newEntry.UtilizationStateDescription = "Machine in changeover"; // STRING
newEntry.IncludeInUtilizationCalculation = true; // BOOLEAN
newEntry.Utilized = false; // BOOLEAN
UtilizationStateData.AddRow(newEntry);

newEntry.UtilizationState = "Unavailable"; // STRING [Primary Key]
newEntry.UtilizationStateDescription = "Machine not scheduled or otherwise unavailable"; // STRING
newEntry.IncludeInUtilizationCalculation = false; // BOOLEAN
newEntry.Utilized = false; // BOOLEAN
UtilizationStateData.AddRow(newEntry);

// add infotable records to data table
Things["PTCSC.UtilizationTWImpl.UtilizationState_DT"].AddOrUpdateDataTableEntries({
	sourceType: undefined /* STRING */,
	values: UtilizationStateData /* INFOTABLE */,
	location: undefined /* LOCATION */,
	source: undefined /* STRING */,
	tags: undefined /* TAGS */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="AddOrUpdateMachineCode"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.MachineCode"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.MachineCode)
    var values = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    var row = {};
    row.EquipmentID = EquipmentID; // STRING [Primary Key]
    row.MachineCode = MachineCode; // INTEGER [Primary Key]
    row.UtilizationState = UtilizationState; // STRING
    row.ReasonGroup = ReasonGroup; // STRING
    row.Reason = Reason; // STRING

    values.AddRow(row);

    // id: STRING
    var id =  Things["PTCSC.UtilizationTWImpl.MachineCode_DT"].AddOrUpdateDataTableEntry({
        sourceType: undefined /* STRING */,
        values: values /* INFOTABLE */,
        location: undefined /* LOCATION */,
        source: me.name /* STRING */,
        tags: undefined /* TAGS */
    }); 
} catch (err) {
	logger.error(me.name + " Service AddOrUpdateMachineCode error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="AddOrUpdateReason"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.Reason"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.Reason)
    var values = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    var row = {};
    row.ReasonDescription = ReasonDescription; // STRING
    row.UtilizationState = UtilizationState; // STRING
    row.ReasonGroup = ReasonGroup; // STRING
    row.Reason = Reason; // STRING [Primary Key]
    row.Failure = Failure; // BOOLEAN

    values.AddRow(row);

    // id: STRING
    var id =  Things["PTCSC.UtilizationTWImpl.Reason_DT"].AddOrUpdateDataTableEntry({
        sourceType: undefined /* STRING */,
        values: values /* INFOTABLE */,
        location: undefined /* LOCATION */,
        source: me.name /* STRING */,
        tags: undefined /* TAGS */
    }); 
} catch (err) {
	logger.error(me.name + " Service AddOrUpdateReason error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="AddOrUpdateReasonGroup"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.ReasonGroup"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.ReasonGroup)
    var values = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    var row = {};
    row.ParentReasonGroup = ParentReasonGroup; // STRING
    row.ReasonGroupDescription = ReasonGroupDescription; // STRING
    row.ReasonGroup = ReasonGroup; // STRING [Primary Key]

    values.AddRow(row);

    // id: STRING
    var id =  Things["PTCSC.UtilizationTWImpl.ReasonGroup_DT"].AddOrUpdateDataTableEntry({
        sourceType: undefined /* STRING */,
        values: values /* INFOTABLE */,
        location: undefined /* LOCATION */,
        source: me.name /* STRING */,
        tags: undefined /* TAGS */
    }); 
} catch (err) {
	logger.error(me.name + " Service AddOrUpdateReasonGroup error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="AddOrUpdateUtilizationState"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.UtilizationState"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.UtilizationState)
    var values = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    var row = {};
    row.UtilizationStateDescription = UtilizationStateDescription; // STRING
    row.Utilized = Utilized; // BOOLEAN
    row.UtilizationState = UtilizationState; // STRING [Primary Key]
    row.IncludeInUtilizationCalculation = IncludeInUtilizationCalculation; // BOOLEAN

    values.AddRow(row);

    // id: STRING
    var id =  Things["PTCSC.UtilizationTWImpl.UtilizationState_DT"].AddOrUpdateDataTableEntry({
        sourceType: undefined /* STRING */,
        values: values /* INFOTABLE */,
        location: undefined /* LOCATION */,
        source: me.name /* STRING */,
        tags: undefined /* TAGS */
    }); 
} catch (err) {
	logger.error(me.name + " Service AddOrUpdateUtilizationState error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="AddUtilizationRecord"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    // values:INFOTABLE(Datashape:PTCSC.Utilization.Utilization)
    var values = Things["PTCSC.UtilizationTWImpl.Utilization_SM"].CreateValues();

    values.EquipmentID = EquipmentID; //STRING
    values.ShiftID = ShiftID; //STRING
    values.UtilizationState = UtilizationState; //STRING
    values.ProductID = ProductID; //STRING
    values.OperatorID = OperatorID; //STRING
    values.ReasonGroup = ReasonGroup; //STRING
    values.Reason = Reason; //STRING

    var params = {
        tags : undefined,
        timestamp : Timestamp,
        source : EquipmentID,
        values : values,
        location : undefined
    };

    // AddStreamEntry(tags:TAGS, timestamp:DATETIME, source:STRING("me.name"), values:INFOTABLE(PTCSC.Utilization.Utilization), location:LOCATION):NOTHING
    Things["PTCSC.UtilizationTWImpl.Utilization_SM"].AddStreamEntry(params);
} catch (err) {
	logger.error(me.name + " Service AddUtilizationRecord error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="DeleteMachineCode"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {

    var query = {
        filters: {
            type : "AND", filters:
            [
                {
                    type : "EQ",
                    fieldName : "EquipmentID",
                    value : EquipmentID
                },
                {
                    type : "EQ",
                    fieldName : "MachineCode",
                    value : MachineCode
                }
            ]}
    };    

    Things["PTCSC.UtilizationTWImpl.MachineCode_DT"].DeleteDataTableEntriesWithQuery({
        sourceType: undefined /* STRING */,
        values: undefined /* INFOTABLE */,
        query: query /* QUERY */,
        location: undefined /* LOCATION */,
        source: undefined /* STRING */,
        tags: undefined /* TAGS */
    });
    
} catch (err) {
	logger.error(me.name + " Service DeleteMachineCode error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="DeleteReason"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    Things["PTCSC.UtilizationTWImpl.Reason_DT"].DeleteDataTableEntryByKey({
        key: Reason /* STRING */
    });
} catch (err) {
	logger.error(me.name + " Service DeleteReason error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="DeleteReasonGroup"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    Things["PTCSC.UtilizationTWImpl.ReasonGroup_DT"].DeleteDataTableEntryByKey({
        key: ReasonGroup /* STRING */
    }); 
} catch (err) {
	logger.error(me.name + " Service DeleteReasonGroup error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="DeleteUtilizationRecords"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
	// get the configuration table entry for DaysToRetain
    var UtilizationConfiguration = me.GetConfigurationTable({
        tableName: "UtilizationConfiguration" /* STRING */
    });

    var DaysToRetain = UtilizationConfiguration.rows[0].DaysToKeepWhenPurging;    
    DaysBackToRetain = DaysToRetain * -1;    

    // dateValue:DATETIME
    var dateValue = new Date();

    // dateAddDays(dateValue:DATETIME,amount:NUMBER):STRING
    var PurgeDate = dateAddDays(dateValue, DaysBackToRetain);

    var params = {
        endDate: PurgeDate /* DATETIME */,
        immediate: true /* BOOLEAN */,
        startDate: undefined /* DATETIME */
    };

    // no return
    Things["PTCSC.UtilizationTWImpl.Utilization_SM"].PurgeStreamEntries(params);
} catch (err) {
	logger.error(me.name + " Service DeleteUtilizationRecords error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="DeleteUtilizationState"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    Things["PTCSC.UtilizationTWImpl.UtilizationState_DT"].DeleteDataTableEntryByKey({
        key: UtilizationState /* STRING */
    });  
} catch (err) {
	logger.error(me.name + " Service DeleteUtilizationState error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetAggregatesByUtilizationReason"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    var params = {
        t: UtilizationRecords /* INFOTABLE */,
        columns: "Duration,Duration,Duration,Duration,Duration" /* STRING */,
        aggregates: "MIN,MAX,AVERAGE,SUM,COUNT" /* STRING */,
        groupByColumns: "Reason" /* STRING */
    };

    // result: INFOTABLE
    var AggregateByUtilizationReason = Resources["InfoTableFunctions"].Aggregate(params);

    var params = {
        t: UtilizationRecords /* INFOTABLE */,
        columns: "Duration" /* STRING */,
        aggregates: "SUM" /* STRING */,
        groupByColumns: undefined /* STRING */
    };

    // result: INFOTABLE
    var TotalDuration = Resources["InfoTableFunctions"].Aggregate(params);

    var NumberRows = TotalDuration.rows.length;

    if (NumberRows > 0){
        var row = TotalDuration.rows[0];
        var TotalTimeSec = row.SUM_Duration;
    }

    // Create table for service result
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.ReasonAggregate"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.ReasonAggregate)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    var tableLength = AggregateByUtilizationReason.rows.length;

    for (var x = 0; x < tableLength; x++) {
        var row = AggregateByUtilizationReason.rows[x];
        var NewRecord = {};
        NewRecord.UtilizationReason = row.Reason;
        NewRecord.SUM_Duration = row.SUM_Duration;
        NewRecord.MIN_Duration = row.MIN_Duration;
        NewRecord.MAX_Duration = row.MAX_Duration;
        NewRecord.AVERAGE_Duration = row.AVERAGE_Duration;
        NewRecord.COUNT_Duration = row.COUNT_Duration;
        if(TotalTimeSec > 0){NewRecord.Percentage = Math.round((row.SUM_Duration / TotalTimeSec)*10000)/100};
        NewRecord.SUM_Duration_Minutes = Math.round((row.SUM_Duration / 60)*100)/100;
        NewRecord.SUM_Duration_Hours = Math.round((row.SUM_Duration / 3600)*100)/100;
        result.AddRow(NewRecord);
    }

    var params = {
        sortColumn: "SUM_Duration" /* STRING */,
        t: result /* INFOTABLE */,
        ascending: false /* BOOLEAN */
    };

    // result: INFOTABLE
    var result = Resources["InfoTableFunctions"].Sort(params); 
} catch (err) {
	logger.error(me.name + " Service GetAggregatesByUtilizationReason error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetAggregatesByUtilizationState"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    var params = {
        t: UtilizationRecords /* INFOTABLE */,
        columns: "Duration,Duration,Duration,Duration,Duration" /* STRING */,
        aggregates: "MIN,MAX,AVERAGE,SUM,COUNT" /* STRING */,
        groupByColumns: "UtilizationState" /* STRING */
    };

    // result: INFOTABLE
    var AggregateByUtilizationState = Resources["InfoTableFunctions"].Aggregate(params);

    var params = {
        t: UtilizationRecords /* INFOTABLE */,
        columns: "Duration" /* STRING */,
        aggregates: "SUM" /* STRING */,
        groupByColumns: undefined /* STRING */
    };

    // result: INFOTABLE
    var TotalDuration = Resources["InfoTableFunctions"].Aggregate(params);

    var NumberRows = TotalDuration.rows.length;

    if (NumberRows > 0){
        var row = TotalDuration.rows[0];
        var TotalTimeSec = row.SUM_Duration;
    }

    // Create table for service result
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.Aggregate"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.Aggregate)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    var tableLength = AggregateByUtilizationState.rows.length;

    for (var x = 0; x < tableLength; x++) {
        var row = AggregateByUtilizationState.rows[x];
        var NewRecord = {};
        NewRecord.UtilizationState = row.UtilizationState;
        NewRecord.SUM_Duration = row.SUM_Duration;
        NewRecord.MIN_Duration = row.MIN_Duration;
        NewRecord.MAX_Duration = row.MAX_Duration;
        NewRecord.AVERAGE_Duration = row.AVERAGE_Duration;
        NewRecord.COUNT_Duration = row.COUNT_Duration;
        if(TotalTimeSec > 0){NewRecord.Percentage = Math.round((row.SUM_Duration / TotalTimeSec)*10000)/100};
        NewRecord.SUM_Duration_Minutes = Math.round((row.SUM_Duration / 60)*100)/100;
        NewRecord.SUM_Duration_Hours = Math.round((row.SUM_Duration / 3600)*100)/100;
        result.AddRow(NewRecord);

    }

    var params = {
        sortColumn: "SUM_Duration" /* STRING */,
        t: result /* INFOTABLE */,
        ascending: false /* BOOLEAN */
    };

    // result: INFOTABLE
    var result = Resources["InfoTableFunctions"].Sort(params);   
} catch (err) {
	logger.error(me.name + " Service GetAggregatesByUtilizationState error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetElapsedTime"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    var date1 = new Date();

    // dateDifference(date1:DATETIME,date2:DATETIME):NUMBER
    var difference = dateDifference(date1, EventStart);

    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.ElapsedTime"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.ElapsedTime)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    var row= {};

    row.Seconds = Math.round((difference/1000)*100)/100;
    row.Minutes = Math.round((difference/60000)*100)/100;
    row.Hours = Math.round((difference/3600000)*100)/100;

    result.AddRow(row);   
} catch (err) {
	logger.error(me.name + " Service GetElapsedTime error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetEventDataPriorToMachineTimeStamp"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// result: INFOTABLE dataShape: ""
let result = Things["PTCSC.UtilizationTWImpl.Utilization_SM"].QueryStreamEntriesWithData({
    oldestFirst: false /* BOOLEAN */,
    maxItems: 1 /* NUMBER {"defaultValue":500} */,
    sourceTags: undefined /* TAGS */,
    endDate: StartDate /* DATETIME */,
    query: undefined /* QUERY */,
    source: EquipmentID /* STRING */,
    startDate: undefined /* DATETIME */,
    tags: undefined /* TAGS */
});
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetFilteredUtilizationDataAndStats"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    // get the utilization records
    if (EquipmentID == "AllUtilizationMachines"){
        // result: INFOTABLE dataShape: "PTCSC.Utilization.UtilizationWithDuration"
        var UtilizationRecords =  me.GetUtilizationRecords({
            StartDate: StartDate /* DATETIME */,
            EndDate: EndDate /* DATETIME */
        });
    }
    else{
        // result: INFOTABLE dataShape: "PTCSC.Utilization.UtilizationWithDuration"
        var UtilizationRecords =  me.GetUtilizationRecordsByMachine({
            StartDate: StartDate /* DATETIME */,
            EndDate: EndDate /* DATETIME */,
            Machine: EquipmentID /* STRING */
        });
    }

    //filter the utilization records by the supplied utilization state
    var FilteredUtilizationRecords =  me.GetFilteredUtilizationRecords({
        UtilizationState: UtilizationState /* STRING */,
        UtilizationRecords: UtilizationRecords /* INFOTABLE */
    });

    // sort filtered records
    var params = {
        sortColumn: "EventStart" /* STRING */,
        t: FilteredUtilizationRecords /* INFOTABLE */,
        ascending: false /* BOOLEAN */
    };

    // result: INFOTABLE
    var FilteredUtilizationRecords = Resources["InfoTableFunctions"].Sort(params);

    // aggregate the filtered records by reason code
    var FilteredUtilizationRecordsAggregatedByReason =  me.GetAggregatesByUtilizationReason({
        UtilizationRecords: FilteredUtilizationRecords /* INFOTABLE */
    });

    // get stats for the filtered records
    var StatsForFilteredRecords =  me.GetUtilizationRecordsSumAvgCount({
        UtilizationRecords: FilteredUtilizationRecords /* INFOTABLE */
    });

    // create an infotable to house the results
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.UtilizationAndStatistics"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.UtilizationAndStatistics)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    // create the infotable row object
    var ResultRow = {};
    ResultRow.UtilizationRecords = FilteredUtilizationRecords;
    ResultRow.UtilizationStats = StatsForFilteredRecords;
    ResultRow.UtilizationRecordsAggregatedByReason = FilteredUtilizationRecordsAggregatedByReason;

    // insert the row in the result infotable
    result.AddRow(ResultRow);  
} catch (err) {
	logger.error(me.name + " Service GetFilteredUtilizationDataAndStats error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetFilteredUtilizationRecords"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    var query = {
      "filters": {
        "fieldName": "UtilizationState",
        "type": "EQ",
        "value": UtilizationState
      }
    };

    var params = {
        t: UtilizationRecords /* INFOTABLE */,
        query: query /* QUERY */
    };

    // result: INFOTABLE
    var result = Resources["InfoTableFunctions"].Query(params);

    var params = {
        sortColumn: "EventStart" /* STRING */,
        t: result /* INFOTABLE */,
        ascending: false /* BOOLEAN */
    };

    // result: INFOTABLE
    var result = Resources["InfoTableFunctions"].Sort(params);

    var params = {
        sortColumn: "EquipmentID" /* STRING */,
        t: result /* INFOTABLE */,
        ascending: false /* BOOLEAN */
    };

    // result: INFOTABLE
    var result = Resources["InfoTableFunctions"].Sort(params);   
} catch (err) {
	logger.error(me.name + " Service GetFilteredUtilizationRecords error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetMachineCodeRecord"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    var query = {
        filters: {
            type : "AND", filters:
            [
                {
                    type : "EQ",
                    fieldName : "EquipmentID",
                    value : EquipmentID
                },
                {
                    type : "EQ",
                    fieldName : "MachineCode",
                    value : MachineCode
                }
            ]}
    };

    // result: INFOTABLE dataShape: ""
    var result =  Things["PTCSC.UtilizationTWImpl.MachineCode_DT"].QueryDataTableEntries({
        maxItems: undefined /* NUMBER */,
        values: undefined /* INFOTABLE */,
        query: query /* QUERY */,
        source: undefined /* STRING */,
        tags: undefined /* TAGS */
    });


} catch (err) {
	logger.error(me.name + " Service GetMachineCodeRecord error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetMachineCodesByEquipment"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    var query = {
                        filters: {type : "EQ",
                                    fieldName : "EquipmentID",
                                    value : EquipmentID
                                }
                    };

    // result: INFOTABLE dataShape: ""
    var result =  Things["PTCSC.UtilizationTWImpl.MachineCode_DT"].QueryDataTableEntries({
        maxItems: undefined /* NUMBER */,
        values: undefined /* INFOTABLE */,
        query: query /* QUERY */,
        source: undefined /* STRING */,
        tags: undefined /* TAGS */
    });

    var params = {
        sortColumn: "MachineCode" /* STRING */,
        t: result /* INFOTABLE */,
        ascending: true /* BOOLEAN */
    };

    // result: INFOTABLE
    var result = Resources["InfoTableFunctions"].Sort(params);   
	result.RemoveField(sourceType);
    
} catch (err) {
	logger.error(me.name + " Service GetMachineCodesByEquipment error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetMachineListingWithDates"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
	// get the configuration table entries
    var UtilizationConfiguration = me.GetConfigurationTable({
        tableName: "UtilizationConfiguration" /* STRING */
    });

    var ConfigCritical = UtilizationConfiguration.rows[0].UtilizationCriticalPercent;
    var ConfigWarning = UtilizationConfiguration.rows[0].UtilizationWarningPercent;
    
    // create infotable for service result
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.MachineStartEndDates"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.MachineStartEndDates)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    // get machine listing
    var Machines =  ThingShapes["PTCSC.Utilization.ModelLogic_TS"].GetImplementingThings();

    // iterate through machine list to create service result rows
    var tableLength = Machines.rows.length;

    for (var x = 0; x < tableLength; x++) {
        var row = Machines.rows[x];

        var NewEntry = {};

        NewEntry.StartDate = StartDate;
        NewEntry.EndDate = EndDate;
        NewEntry.EquipmentID = row.name;
        NewEntry.EquipmentDesc = row.description;
        NewEntry.Critical = ConfigCritical;
        NewEntry.Warning = ConfigWarning;

        result.AddRow(NewEntry);
    }

    //sort the result set by description
    var params = {
        sortColumn: "EquipmentDesc" /* STRING */,
        t: result /* INFOTABLE */,
        ascending: true /* BOOLEAN */
    };

    // result: INFOTABLE
    var result = Resources["InfoTableFunctions"].Sort(params);   
} catch (err) {
	logger.error(me.name + " Service GetMachineListingWithDates error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetMachineListingWithProperties"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    // result: INFOTABLE dataShape: "RootEntityList"
    var result =  ThingShapes["PTCSC.Utilization.ModelLogic_TS"].GetImplementingThingsWithData();

    var params = {
        sortColumn: "description" /* STRING */,
        t: result /* INFOTABLE */,
        ascending: true /* BOOLEAN */
    };

    // result: INFOTABLE
    var result = Resources["InfoTableFunctions"].Sort(params);   
} catch (err) {
	logger.error(me.name + " Service GetMachineListingWithProperties error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetMachineUtilization"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    // Get the utilization records for the specified machine
    // result: INFOTABLE dataShape: "PTCSC.Utilization.UtilizationWithDuration"
    var UtilRecords =  me.GetUtilizationRecordsByMachine({
        StartDate: StartDate /* DATETIME */,
        EndDate: EndDate /* DATETIME */,
        Machine: EquipmentID /* STRING */
    });

    // Reverse sort the retrieved records on EventStart
    var params = {
        sortColumn: "EventStart" /* STRING */,
        t: UtilRecords /* INFOTABLE */,
        ascending: true /* BOOLEAN */
    };
    // result: INFOTABLE
    var UtilRecordsReverseSort = Resources["InfoTableFunctions"].Sort(params);

    // Aggregate the utilization data based on state
    var AggregatedData =  me.GetAggregatesByUtilizationState({
        UtilizationRecords: UtilRecords /* INFOTABLE */
    });

    // get stats for the aggregated data
    var StatsForAggregatedData =  me.GetStatsForAggregateData({
        AggregatedByUtilizationStateData: AggregatedData /* INFOTABLE */
    });

 	//create empty infotable for the schedule data   
    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.ResourceScheduleData)
    var ScheduleData = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
        infoTableName: "InfoTable",
        dataShapeName: "PTCSC.Utilization.ResourceScheduleData"
    });

    //create empty infotable for the data column of the schedule data
    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.ScheduleData)
    let ScheduleDataData = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
        infoTableName: "InfoTable",
        dataShapeName: "PTCSC.Utilization.ScheduleData"
    });

    //iterate through UtilRecordsReverseSort to create data for schedule widget
    var NewRow = {};
    UtilRecordsReverseSort.rows.toArray().forEach(row => {
        NewRow.reason = row.UtilizationState;
        NewRow.start = row.EventStart;
        NewRow.end = dateAddSeconds(row.EventStart, row.Duration);
		if(row.UtilizationState == "Running"){
            NewRow.color = "MediumSeaGreen";}
        else if(row.UtilizationState == "Down"){
            NewRow.color = "Red";}  
        else if(row.UtilizationState == "Idle"){
            NewRow.color = "Yellow";} 
        else if(row.UtilizationState == "Setup"){
            NewRow.color = "LightSkyBlue";} 
        else {
            NewRow.color = "Silver";}      
		NewRow.info = row.Reason;
        ScheduleDataData.AddRow(NewRow);
    });

    var ResourceScheduleDataRow = {};
    ResourceScheduleDataRow.resource = EquipmentID;
    ResourceScheduleDataRow.data = ScheduleDataData;
	ScheduleData.AddRow(ResourceScheduleDataRow);
    
    // create empty infotable for the result set
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.Machine"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.Machine)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    // create result row object and add to result table
    var ResultRow = {};
    ResultRow.UtilizationRecords = UtilRecords;
    ResultRow.ReverseSortUtilizationRecords = UtilRecordsReverseSort;
    ResultRow.AggregatedRecords = AggregatedData;
    ResultRow.AggregateStats = StatsForAggregatedData;
    ResultRow.ScheduleData = ScheduleData;
    result.AddRow(ResultRow);   
} catch (err) {
	logger.error(me.name + " Service GetMachineUtilization error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetReasonGroups"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    // result: INFOTABLE dataShape: ""
    var ReasonGroups =  Things["PTCSC.UtilizationTWImpl.ReasonGroup_DT"].GetDataTableEntries({
        maxItems: undefined /* NUMBER */
    });

    var params = {
        sortColumn: "ReasonGroup" /* STRING */,
        t: ReasonGroups /* INFOTABLE */,
        ascending: true /* BOOLEAN */
    };

    // result: INFOTABLE
    var ReasonGroups = Resources["InfoTableFunctions"].Sort(params);

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.ReasonGroup)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
        infoTableName: "InfoTable",
        dataShapeName: "PTCSC.Utilization.ReasonGroup"
    });

    var NewRow = {};
    
    ReasonGroups.rows.toArray().forEach(row => {
		NewRow.ReasonGroup = row.ReasonGroup;
		NewRow.ReasonGroupDescription = row.ReasonGroupDescription;
		NewRow.ParentReasonGroup = row.ParentReasonGroup;
        result.AddRow(NewRow);
    });
    
} catch (err) {
	logger.error(me.name + " Service GetReasonGroups error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetReasonGroupsByUtilizationState"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    var values = Things["PTCSC.UtilizationTWImpl.Reason_DT"].CreateValues();

    values.UtilizationState = UtilizationState; //STRING

    var params = {
        maxItems: undefined /* NUMBER */,
        values: values /* INFOTABLE*/,
        query: undefined /* QUERY */,
        source: undefined /* STRING */,
        tags: undefined /* TAGS */
    };

    // result: INFOTABLE
    var ReasonsInState = Things["PTCSC.UtilizationTWImpl.Reason_DT"].QueryDataTableEntries(params);

    var params = {
        t: ReasonsInState /* INFOTABLE */,
        columns: "ReasonGroup" /* STRING */
    };

    // result: INFOTABLE
    var ReasonGroups = Resources["InfoTableFunctions"].Distinct(params); 

    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.ReasonGroup"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.ReasonGroup)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    var tableLength = ReasonGroups.rows.length;

    for (var x = 0; x < tableLength; x++) {
        var row = ReasonGroups.rows[x];

        var values = Things["PTCSC.UtilizationTWImpl.ReasonGroup_DT"].CreateValues();

        values.ReasonGroup = row.ReasonGroup; //STRING [Primary Key]

        var params = {
            values: values /* INFOTABLE*/
        };

        // result: INFOTABLE
        var ReasonGroupRecord = Things["PTCSC.UtilizationTWImpl.ReasonGroup_DT"].GetDataTableEntry(params);

        var NewResultRecord = {};

        NewResultRecord.ParentReasonGroup = ReasonGroupRecord.rows[0].ParentReasonGroup;    
        NewResultRecord.ReasonGroupDescription = ReasonGroupRecord.rows[0].ReasonGroupDescription;
        NewResultRecord.ReasonGroup = ReasonGroupRecord.rows[0].ReasonGroup;

        result.AddRow(NewResultRecord);
    }

    var params = {
        sortColumn: "ReasonGroup" /* STRING */,
        t: result /* INFOTABLE */,
        ascending: true /* BOOLEAN */
    };

    // result: INFOTABLE
    var result = Resources["InfoTableFunctions"].Sort(params);
} catch (err) {
	logger.error(me.name + " Service GetReasonGroupsByUtilizationState error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetReasonRowNumber"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    var result = 1;

    var tableLength = ReasonRows.rows.length;
    for (var x=0; x < tableLength; x++) {
        var row = ReasonRows.rows[x];
        if (row.Reason == Reason){
            result = x+1;
        }
    }   
} catch (err) {
	logger.error(me.name + " Service GetReasonRowNumber error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetReasonsByReasonGroup"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    var query = {
        filters: {type : "EQ",
                  fieldName : "ReasonGroup",
                  value : ReasonGroup
                 }
    };

    // result: INFOTABLE dataShape: ""
    var Reasons =  Things["PTCSC.UtilizationTWImpl.Reason_DT"].QueryDataTableEntries({
        maxItems: undefined /* NUMBER */,
        values: undefined /* INFOTABLE */,
        query: query /* QUERY */,
        source: undefined /* STRING */,
        tags: undefined /* TAGS */
    });

    var params = {
        sortColumn: "Reason" /* STRING */,
        t: Reasons /* INFOTABLE */,
        ascending: true /* BOOLEAN */
    };

    // result: INFOTABLE
    var Reasons = Resources["InfoTableFunctions"].Sort(params); 
    
    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.Reason)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
        infoTableName: "InfoTable",
        dataShapeName: "PTCSC.Utilization.Reason"
    });

    var NewRow = {};
    
    Reasons.rows.toArray().forEach(row => {
        NewRow.Reason = row.Reason;
        NewRow.ReasonDescription = row.ReasonDescription;
        NewRow.ReasonGroup = row.ReasonGroup;
        NewRow.UtilizationState = row.UtilizationState;
        NewRow.Failure = row.Failure;
        result.AddRow(NewRow);
    });
} catch (err) {
	logger.error(me.name + " Service GetReasonsByReasonGroup error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetReasonsByReasonGroupAndUtilizationState"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    var values = Things["PTCSC.UtilizationTWImpl.Reason_DT"].CreateValues();

    values.UtilizationState = UtilizationState; //STRING
    values.ReasonGroup = ReasonGroup; //STRING

    var params = {
        maxItems: undefined /* NUMBER */,
        values: values /* INFOTABLE*/,
        query: undefined /* QUERY */,
        source: undefined /* STRING */,
        tags: undefined /* TAGS */
    };

    // result: INFOTABLE
    var result = Things["PTCSC.UtilizationTWImpl.Reason_DT"].QueryDataTableEntries(params);

    var params = {
        sortColumn: "Reason" /* STRING */,
        t: result /* INFOTABLE */,
        ascending: true /* BOOLEAN */
    };

    // result: INFOTABLE
    var result = Resources["InfoTableFunctions"].Sort(params); 
} catch (err) {
	logger.error(me.name + " Service GetReasonsByReasonGroupAndUtilizationState error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetStartEndDates"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
	// get the configuration table entries
    var UtilizationConfiguration = me.GetConfigurationTable({
        tableName: "UtilizationConfiguration" /* STRING */
    });

    var ConfigHoursBack = UtilizationConfiguration.rows[0].HoursToLookBackOnUtilScreens;
	var ConfigScreenRefreshRate = UtilizationConfiguration.rows[0].ScreenRefreshRate;
    var ConfigCritical = UtilizationConfiguration.rows[0].UtilizationCriticalPercent;
    var ConfigWarning = UtilizationConfiguration.rows[0].UtilizationWarningPercent;
    
    // timestamp:DATETIME
    var EndDate = new Date();

    HoursBack = ConfigHoursBack * -1;

    // dateAddHours(dateValue:DATETIME,amount:NUMBER):STRING
    var StartDate = dateAddHours(EndDate, HoursBack);

    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.StartEndDates"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.StartEndDates)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    var ResultRecord = {};

    ResultRecord.EndDate = EndDate;
    ResultRecord.StartDate = StartDate;
    ResultRecord.ScreenRefreshRate = ConfigScreenRefreshRate;
    ResultRecord.Critical = ConfigCritical;
    ResultRecord.Warning = ConfigWarning;

    result.AddRow(ResultRecord);   
} catch (err) {
	logger.error(me.name + " Service GetStartEndDates error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetStatsForAggregateData"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    // create table for service result
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.Statistics"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.Statistics)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    //variables for stats
    var EventCount = 0;
    var TotalTime = 0;
    var Uptime = 0;
    var Downtime = 0;

    // loop through aggregated records passed in
    var tableLength = AggregatedByUtilizationStateData.rows.length;

    for (var x = 0; x < tableLength; x++) {
        var row = AggregatedByUtilizationStateData.rows[x];
        //Look up record from the UtilizationState table

        var values = Things["PTCSC.UtilizationTWImpl.UtilizationState_DT"].CreateValues();

        values.UtilizationState = row.UtilizationState; //STRING [Primary Key]

        var params = {
            values: values /* INFOTABLE*/
        };

        // result: INFOTABLE
        var UtilizationStateRecord = Things["PTCSC.UtilizationTWImpl.UtilizationState_DT"].GetDataTableEntry(params);

        var UtilRow = UtilizationStateRecord.rows[0];

        EventCount = EventCount + row.COUNT_Duration;
        TotalTime = TotalTime + row.SUM_Duration;
        if (UtilRow.IncludeInUtilizationCalculation == true){
            if (UtilRow.Utilized == true){
                Uptime = Uptime + row.SUM_Duration;}
            else {Downtime = Downtime + row.SUM_Duration;}
        }
    }

    var StatRow = {};

    StatRow.EventCount = EventCount;
    StatRow.TotalTimeSec = Math.round(TotalTime*100)/100;
    StatRow.TotalTimeMin = Math.round((TotalTime/60)*100)/100;
    StatRow.TotalTimeHour = Math.round((TotalTime/3600)*100)/100;
    StatRow.UptimeSec = Math.round(Uptime*100)/100;
    StatRow.UptimeMin = Math.round((Uptime/60)*100)/100;
    StatRow.UptimeHour = Math.round((Uptime/3600)*100)/100;
    StatRow.DowntimeSec = Math.round(Downtime*100)/100;
    StatRow.DowntimeMin = Math.round((Downtime/60)*100)/100;
    StatRow.DowntimeHour = Math.round((Downtime/3600)*100)/100;
    var TotalAvailableTime = Math.round((Uptime + Downtime)*100)/100;
    if (TotalAvailableTime > 0){
        StatRow.UtilizationPercent = Math.round((Uptime / TotalAvailableTime)*10000)/100;
        StatRow.DowntimePercent = Math.round((Downtime / TotalAvailableTime)*10000)/100;}
    if (EventCount > 0){
        StatRow.AvgEventTimeSec = Math.round((TotalTime/EventCount)*100)/100;
        StatRow.AvgEventTimeMin = Math.round((TotalTime/(EventCount*60))*100)/100;
        StatRow.AvgEventTimeHour = Math.round((TotalTime/(EventCount*3600))*100)/100;
    }
    result.AddRow(StatRow);   
} catch (err) {
	logger.error(me.name + " Service GetStatsForAggregateData error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetUtilizationOverview"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    // get all utilization records for the time span
    var AllUtilizationRecords =  me.GetUtilizationRecords({
        StartDate: StartDate /* DATETIME */,
        EndDate: EndDate /* DATETIME */
    });

    // get listing of machine with start and end dates
    var MachineListing =  me.GetMachineListingWithDates({
        StartDate: StartDate /* DATETIME */,
        EndDate: EndDate /* DATETIME */
    });

    // create the infotable to hold utilization data for each machine
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.RepeatedMachineUtilization"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.RepeatedMachineUtilization)
    var SpecificMachineData = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    // interate trhough the machines to pouplate the specific machine infotable
    var tableLength = MachineListing.rows.length;

    for (var x = 0; x < tableLength; x++) {
        var row = MachineListing.rows[x];
        var NewRow = {};
        NewRow.StartDate = row.StartDate;
        NewRow.EndDate = row.EndDate;
        NewRow.EquipmentID = row.EquipmentID;

        //query the specific machine utilization records from AllUtilizationRecords
        //create query object
        var query = {
          "filters": {
            "fieldName": "EquipmentID",
            "type": "EQ",
            "value": row.EquipmentID
          }
        };    

        //query tabele
        var params = {
            t: AllUtilizationRecords /* INFOTABLE */,
            query: query /* QUERY */
        };

        // result: INFOTABLE
        var SpecificMachineUtilization = Resources["InfoTableFunctions"].Query(params);

        //sort descending
        var params = {
            sortColumn: "EventStart" /* STRING */,
            t: SpecificMachineUtilization /* INFOTABLE */,
            ascending: false /* BOOLEAN */
        };

        // result: INFOTABLE
        var SpecificMachineUtilizationDesc = Resources["InfoTableFunctions"].Sort(params);

        NewRow.UtilizationRecords = SpecificMachineUtilizationDesc;

        //sort ascending
        var params = {
            sortColumn: "EventStart" /* STRING */,
            t: SpecificMachineUtilization /* INFOTABLE */,
            ascending: true /* BOOLEAN */
        };

        // result: INFOTABLE
        var SpecificMachineUtilizationAsc = Resources["InfoTableFunctions"].Sort(params);

        NewRow.ReverseSortUtilizationRecords = SpecificMachineUtilizationAsc;    

        // Aggregate the records by state
        var SpecificMachineAggregatedRecords =  me.GetAggregatesByUtilizationState({
            UtilizationRecords: SpecificMachineUtilization /* INFOTABLE */
        });    

        NewRow.AggregatedRecords = SpecificMachineAggregatedRecords;

        // get the stats for the aggregated records
        var AggregateStats =  me.GetStatsForAggregateData({
            AggregatedByUtilizationStateData: SpecificMachineAggregatedRecords /* INFOTABLE */
        });    

        NewRow.AggregateStats = AggregateStats;

        SpecificMachineData.AddRow(NewRow);
    }

    // create infotable to house the service result
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.Overview"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.Overview)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    var ResultRow = {};

    // aggregate all of the machine data
    var AllMachineDataAggregatedByState =  me.GetAggregatesByUtilizationState({
        UtilizationRecords: AllUtilizationRecords /* INFOTABLE */
    });

    ResultRow.AllUtilizationDataAggregatedByState = AllMachineDataAggregatedByState;
    ResultRow.UtilizationDataByMachine = SpecificMachineData;
    ResultRow.AllUtilizationData = AllUtilizationRecords;
    result.AddRow(ResultRow);   
} catch (err) {
	logger.error(me.name + " Service GetUtilizationOverview error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetUtilizationOverviewForMachine"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    //create infotable to house the results of the service
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.Machine"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.Machine)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    // query utilization records
    var SpecificMachineUtilization =  me.GetUtilizationRecordsByMachine({
        StartDate: StartDate /* DATETIME */,
        EndDate: EndDate /* DATETIME */,
        Machine: EquipmentID /* STRING */
    });

    //sort descending
    var params = {
        sortColumn: "EventStart" /* STRING */,
        t: SpecificMachineUtilization /* INFOTABLE */,
        ascending: false /* BOOLEAN */
    };

    // result: INFOTABLE
    var SpecificMachineUtilizationDesc = Resources["InfoTableFunctions"].Sort(params);

    //set infotable 
    result.UtilizationRecords = SpecificMachineUtilizationDesc;

    //sort ascending
    var params = {
        sortColumn: "EventStart" /* STRING */,
        t: SpecificMachineUtilization /* INFOTABLE */,
        ascending: true /* BOOLEAN */
    };

    // result: INFOTABLE
    var SpecificMachineUtilizationAsc = Resources["InfoTableFunctions"].Sort(params);

    result.ReverseSortUtilizationRecords = SpecificMachineUtilizationAsc;    

    // Aggregate the records by state
    var SpecificMachineAggregatedRecords =  me.GetAggregatesByUtilizationState({
        UtilizationRecords: SpecificMachineUtilization /* INFOTABLE */
    });    

    result.AggregatedRecords = SpecificMachineAggregatedRecords;

    // get the stats for the aggregated records
    var AggregateStats =  me.GetStatsForAggregateData({
        AggregatedByUtilizationStateData: SpecificMachineAggregatedRecords /* INFOTABLE */
    });    

    result.AggregateStats = AggregateStats;   
} catch (err) {
	logger.error(me.name + " Service GetUtilizationOverviewForMachine error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetUtilizationRecords"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    // create infotable for result
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.UtilizationWithDuration"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.UtilizationWithDuration)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    // result: INFOTABLE dataShape: RootEntityList
    var MachineListing =  ThingShapes["PTCSC.Utilization.ModelLogic_TS"].GetImplementingThings();

    var tableLength = MachineListing.rows.length;

    for (var x = 0; x < tableLength; x++) {
        var row = MachineListing.rows[x];
        //get utilization records for a machine

        var params = {
            StartDate: StartDate /* DATETIME */,
            EndDate: EndDate /* DATETIME */,
            Machine: row.name /* STRING */
        };

        // result: INFOTABLE dataShape: "UtilizationShapeWithDuration"
        var MachineUtilizationRecords = me.GetUtilizationRecordsByMachine(params);

        //add records to result
        var tableLength2 = MachineUtilizationRecords.rows.length;

        for (var y = 0; y < tableLength2; y++) {
            var innerrow = MachineUtilizationRecords.rows[y];    
            result.AddRow(innerrow);
        }
    }   
} catch (err) {
	logger.error(me.name + " Service GetUtilizationRecords error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetUtilizationRecordsByMachine"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    // Grab raw utilization records from utilization stream
    // result: INFOTABLE dataShape: ""
    var RawUtilizationRecords =  Things["PTCSC.UtilizationTWImpl.Utilization_SM"].QueryStreamEntriesWithData({
        oldestFirst: undefined /* BOOLEAN */,
        maxItems: undefined /* NUMBER */,
        sourceTags: undefined /* TAGS */,
        endDate: EndDate /* DATETIME */,
        query: undefined /* QUERY */,
        source: Machine /* STRING */,
        startDate: StartDate /* DATETIME */,
        tags: undefined /* TAGS */
    });

    // create an infotable to house the service result
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.UtilizationWithDuration"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.UtilizationWithDuration)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    // set event end time for latest event to EndDate parameter

    // current time
    var currentTime = new Date();

    // use end time if less than current time, otherwise use current time

    if (EndDate < currentTime){
        var EventEndTime = EndDate;}
    else {var EventEndTime = currentTime;}

    var TimeDifferenceSeconds = 0;

    // create row object to house new record for service result
    var EventRecord = {};

    // loop through raw utilization records, calculate duration and add to service result 
    var tableLength = RawUtilizationRecords.rows.length;

    for (var x = 0; x < tableLength; x++) {
        var row = RawUtilizationRecords.rows[x];
        // Calculate and set event duration
        TimeDifferenceSeconds = dateDifference(EventEndTime, row.timestamp)/1000;
        EventRecord.Duration = Math.round(TimeDifferenceSeconds*100)/100;
        // Set event end time for next record
        EventEndTime = row.timestamp;
        // set the rest of the columns
        EventRecord.EventStart = row.timestamp;
        EventRecord.EquipmentID = row.EquipmentID;
        EventRecord.EquipmentDesc = Things[row.EquipmentID].description;
        EventRecord.UtilizationState = row.UtilizationState;
        EventRecord.ReasonGroup = row.ReasonGroup;
        EventRecord.Reason = row.Reason;
        EventRecord.OperatorID = row.OperatorID;
        EventRecord.ProductID = row.ProductID;
        EventRecord.ShiftID = row.ShiftID;
        EventRecord.Comment = row.Comment;
        EventRecord.ModifiedAt = row.ModifiedAt;
        EventRecord.ModifiedBy = row.ModifiedBy;
        EventRecord.id = row.id;
        // add the record to the service result
        result.AddRow(EventRecord);
    }

    // get the first record
    var params = {
        StartDate: StartDate /* DATETIME */,
        EquipmentID: Machine /* STRING */
    };

    // result: INFOTABLE dataShape: "UtilizationShapeWithDuration"
    var FirstRecord = me.GetEventDataPriorToMachineTimeStamp(params);

    // Calculate and set event duration
    if (FirstRecord.rows.length > 0){
        var row = FirstRecord.rows[0];

        TimeDifferenceSeconds = dateDifference(EventEndTime, StartDate)/1000;
        EventRecord.Duration = Math.round(TimeDifferenceSeconds*100)/100;

        // set the rest of the columns
        EventRecord.EventStart = StartDate;
        EventRecord.EquipmentID = row.EquipmentID;
        EventRecord.EquipmentDesc = Things[row.EquipmentID].description;
        EventRecord.UtilizationState = row.UtilizationState;
        EventRecord.ReasonGroup = row.ReasonGroup;
        EventRecord.Reason = row.Reason;
        EventRecord.OperatorID = row.OperatorID;
        EventRecord.ProductID = row.ProductID;
        EventRecord.ShiftID = row.ShiftID;
        EventRecord.Comment = row.Comment;
        EventRecord.ModifiedAt = row.ModifiedAt;
        EventRecord.ModifiedBy = row.ModifiedBy;
        EventRecord.id = row.id;
        // add the record to the service result
        result.AddRow(EventRecord);}
    else{
        TimeDifferenceSeconds = dateDifference(EventEndTime, StartDate)/1000;
        EventRecord.Duration = Math.round(TimeDifferenceSeconds*100)/100;
        EventRecord.EventStart = StartDate;
        EventRecord.EquipmentID = Machine;
        EventRecord.EquipmentDesc = Things[Machine].description;
        EventRecord.UtilizationState = "Unavailable";
        EventRecord.ReasonGroup = "Unavailable";
        EventRecord.Reason = "Machine Not Online";
        EventRecord.OperatorID = undefined;
        EventRecord.ProductID = undefined;
        EventRecord.ShiftID = undefined;
        EventRecord.Shift = undefined;
        EventRecord.Comment = undefined;
        EventRecord.ModifiedAt = undefined;
        EventRecord.ModifiedBy = undefined;
        EventRecord.id = undefined;   
        // add the record to the service result
        result.AddRow(EventRecord);
    }   
} catch (err) {
	logger.error(me.name + " Service GetUtilizationRecordsByMachine error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetUtilizationRecordsSumAvgCount"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    // create table for service result
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.Statistics"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.Statistics)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    var params = {
        t: UtilizationRecords /* INFOTABLE */,
        columns: "Duration,Duration,Duration" /* STRING */,
        aggregates: "SUM,AVERAGE,COUNT" /* STRING */,
        groupByColumns: undefined /* STRING */
    };

    // result: INFOTABLE
    var Aggregate = Resources["InfoTableFunctions"].Aggregate(params);

    var StatRow = {};

    StatRow.EventCount = Aggregate.rows[0].COUNT_Duration;
    StatRow.TotalTimeSec = Math.round(Aggregate.rows[0].SUM_Duration*100)/100;
    StatRow.TotalTimeMin = Math.round((Aggregate.rows[0].SUM_Duration/60)*100)/100;
    StatRow.TotalTimeHour = Math.round((Aggregate.rows[0].SUM_Duration/3600)*100)/100;

    if (StatRow.EventCount > 0){
        StatRow.AvgEventTimeSec = Math.round((StatRow.TotalTimeSec/StatRow.EventCount)*100)/100;
        StatRow.AvgEventTimeMin = Math.round((StatRow.TotalTimeSec/(StatRow.EventCount*60))*100)/100;
        StatRow.AvgEventTimeHour = Math.round((StatRow.TotalTimeSec/(StatRow.EventCount*3600))*100)/100;
    }
    result.AddRow(StatRow);   
} catch (err) {
	logger.error(me.name + " Service GetUtilizationRecordsSumAvgCount error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetUtilizationScheduleData"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    // Get the utilization records for the specified machine
    // result: INFOTABLE dataShape: "PTCSC.Utilization.UtilizationWithDuration"
    var UtilRecords =  me.GetUtilizationRecordsByMachine({
        StartDate: StartDate /* DATETIME */,
        EndDate: EndDate /* DATETIME */,
        Machine: EquipmentID /* STRING */
    });

    // Reverse sort the retrieved records on EventStart
    var params = {
        sortColumn: "EventStart" /* STRING */,
        t: UtilRecords /* INFOTABLE */,
        ascending: true /* BOOLEAN */
    };
    // result: INFOTABLE
    var UtilRecordsReverseSort = Resources["InfoTableFunctions"].Sort(params);

    // Aggregate the utilization data based on state
    var AggregatedData =  me.GetAggregatesByUtilizationState({
        UtilizationRecords: UtilRecords /* INFOTABLE */
    });

    // get stats for the aggregated data
    var StatsForAggregatedData =  me.GetStatsForAggregateData({
        AggregatedByUtilizationStateData: AggregatedData /* INFOTABLE */
    });

 	//create empty infotable for the schedule data   
    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.ResourceScheduleData)
    var ScheduleData = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
        infoTableName: "InfoTable",
        dataShapeName: "PTCSC.Utilization.ResourceScheduleData"
    });

    //create empty infotable for the data column of the schedule data
    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.ScheduleData)
    let ScheduleDataData = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
        infoTableName: "InfoTable",
        dataShapeName: "PTCSC.Utilization.ScheduleData"
    });

    //iterate through UtilRecordsReverseSort to create data for schedule widget
    var NewRow = {};
    UtilRecordsReverseSort.rows.toArray().forEach(row => {
        NewRow.reason = row.UtilizationState;
        NewRow.start = row.EventStart;
        NewRow.end = dateAddSeconds(row.EventStart, row.Duration);
		if(row.UtilizationState == "Running"){
            NewRow.color = "MediumSeaGreen";}
        else if(row.UtilizationState == "Down"){
            NewRow.color = "Red";}  
        else if(row.UtilizationState == "Idle"){
            NewRow.color = "Yellow";} 
        else if(row.UtilizationState == "Setup"){
            NewRow.color = "LightSkyBlue";} 
        else {
            NewRow.color = "Silver";}      
		NewRow.info = row.Reason;
        NewRow.EquipmentID = row.EquipmentID;
        NewRow.UtilizationState = row.UtilizationState;
        NewRow.ReasonGroup = row.ReasonGroup;
        NewRow.Reason = row.Reason;
        NewRow.OperatorID = row.OperatorID;
        NewRow.ShiftID = row.ShiftID;
        NewRow.Comment = row.Comment;
        NewRow.ModifiedAt = row.ModifiedAt;
        NewRow.ModifiedBy = row.ModifiedBy;
        NewRow.Duration = row.Duration;
        NewRow.EventStart = row.EventStart;
        NewRow.id = row.id;
        NewRow.ProductID = row.ProductID;
        NewRow.EquipmentDesc = row.EquipmentDesc;
        ScheduleDataData.AddRow(NewRow);
    });

    var ResourceScheduleDataRow = {};
    ResourceScheduleDataRow.resource = EquipmentID;
    ResourceScheduleDataRow.data = ScheduleDataData;
	ScheduleData.AddRow(ResourceScheduleDataRow);
    
    // create empty infotable for the result set
    var params = {
        infoTableName : "InfoTable",
        dataShapeName : "PTCSC.Utilization.UtilizationSchedule"
    };

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.UtilizationSchedule)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

    // create result row object and add to result table
    var ResultRow = {};
    ResultRow.UtilizationRecords = ScheduleData;
    ResultRow.UtilizationPercent = StatsForAggregatedData.rows[0].UtilizationPercent;
    result.AddRow(ResultRow);   
} catch (err) {
	logger.error(me.name + " Service GetUtilizationScheduleData error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetUtilizationStates"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    // result: INFOTABLE dataShape: ""
    var UtilStateRecords =  Things["PTCSC.UtilizationTWImpl.UtilizationState_DT"].GetDataTableEntries({
        maxItems: undefined /* NUMBER */
    });

    var params = {
        sortColumn: "UtilizationState" /* STRING */,
        t: UtilStateRecords /* INFOTABLE */,
        ascending: true /* BOOLEAN */
    };

    // result: INFOTABLE
    var UtilStateRecords = Resources["InfoTableFunctions"].Sort(params);

    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTCSC.Utilization.UtilizationState)
    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
        infoTableName: "InfoTable",
        dataShapeName: "PTCSC.Utilization.UtilizationState"
    });

    var NewRow = {};
    UtilStateRecords.rows.toArray().forEach(row => {
        NewRow.UtilizationState = row.UtilizationState;
        NewRow.UtilizationStateDescription = row.UtilizationStateDescription;
        NewRow.IncludeInUtilizationCalculation = row.IncludeInUtilizationCalculation;
        NewRow.Utilized = row.Utilized;
        result.AddRow(NewRow);
    });
} catch (err) {
	logger.error(me.name + " Service GetUtilizationStates error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="UpdateUtilizationEventRecord"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
    // timestamp:DATETIME
    var dateValue = new Date();

    // values:INFOTABLE(Datashape:PTCSC.Utilization.Utilization)
    var values = Things["PTCSC.UtilizationTWImpl.Utilization_SM"].CreateValues();

    values.ModifiedAt = dateValue; //DATETIME
    values.Comment = Comment; //STRING
    values.EquipmentID = EquipmentID; //STRING
    values.ShiftID = ShiftID; //STRING
    values.ProductID = ProductID; //STRING
    values.UtilizationState = UtilizationState; //STRING
    values.OperatorID = OperatorID; //STRING
    values.ModifiedBy = ModifiedBy; //STRING
    values.ReasonGroup = ReasonGroup; //STRING
    values.Reason = Reason; //STRING

    Things["PTCSC.UtilizationTWImpl.Utilization_SM"].UpdateStreamEntry({
        values: values /* INFOTABLE */,
        streamEntryId: StreamEntryID /* STRING */,
        location: undefined /* LOCATION */,
        source: EquipmentID /* STRING */,
        tags: undefined /* TAGS */
    });  
} catch (err) {
	logger.error(me.name + " Service UpdateUtilizationEventRecord error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="UtilizationAggregatesPassThrough"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var result = UtilizationAggregates;]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="UtilizationRecordsPassThrough"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[try {
	var result = UtilizationRecords;
} catch (err) {
	logger.error(me.name + " Service SERVICENAMEHERE error at line " + err.lineNumber + ": " + err);  
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="UtilizationScheduleDataPassThrough"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var result = ScheduleData;]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="UtilizationStatisticsPassThrough"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var result = UtilizationAggregateStats;]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></ServiceImplementations><Subscriptions><Subscription description="" enabled="true" eventName="Timer" name="UtilizationDataPurge" source="PTCSC.Utilization.RecordPurge_TM" sourceProperty="" sourceType="Thing"><ServiceImplementation description="" handlerName="Script" name="UtilizationDataPurge"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[me.DeleteUtilizationRecords({
	DaysBackToRetain: undefined /* INTEGER */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription></Subscriptions></ThingShape><ImplementedShapes><ImplementedShape name="PTCSC.UtilizationTWImpl.Management_TS" type="ThingShape"/></ImplementedShapes><SharedConfigurationTables/><InstanceDesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></InstanceDesignTimePermissions><InstanceRunTimePermissions/><InstanceVisibilityPermissions><Visibility/></InstanceVisibilityPermissions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="Created Programmatically" timestamp="2022-10-28T19:44:04.495Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="Adding ThingShape PTCSC.UtilizationTWImpl.Management_TS to thing tempalte PTCSC.UtilizationTWImpl.Manager_TT" timestamp="2022-10-28T19:44:04.512Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCSC.UtilizationTWImpl]" timestamp="2022-10-28T19:44:04.534Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : AddOrUpdateInitialUtilizationStateData : service added&#10;" timestamp="2022-11-01T01:32:26.860Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : AddDemoMachineCodeDataForEquipment : service added&#10;" timestamp="2022-11-02T14:48:55.456Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : AddOrUpdateInitialReasonData : service added&#10;" timestamp="2022-11-02T14:57:49.359Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : AddOrUpdateInitialReasonGroupData : service added&#10;" timestamp="2022-11-02T14:58:51.933Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : AddDemoMachineCodeDataForEquipment : service updated&#10;" timestamp="2022-11-02T15:02:03.442Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : DeleteMachineCode : service added&#10;" timestamp="2022-11-02T18:39:17.226Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : DeleteReason : service added&#10;" timestamp="2022-11-02T18:42:51.176Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : DeleteReasonGroup : service added&#10;" timestamp="2022-11-02T18:44:31.807Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : DeleteUtilizationState : service added&#10;" timestamp="2022-11-02T18:45:38.156Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : AddOrUpdateReason : service added&#10;" timestamp="2022-11-02T18:46:43.679Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : AddOrUpdateReasonGroup : service added&#10;" timestamp="2022-11-02T18:47:23.171Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : AddOrUpdateMachineCode : service added&#10;" timestamp="2022-11-02T18:47:36.189Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : AddOrUpdateUtilizationState : service added&#10;" timestamp="2022-11-02T18:48:23.915Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : AddOrUpdateMachineCode : service updated&#10;" timestamp="2022-11-02T18:55:29.901Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : AddDemoMachineCodeDataForEquipment : service updated&#10;" timestamp="2022-11-02T19:22:04.463Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : AddOrUpdateMachineCode : service updated&#10;" timestamp="2022-11-02T20:44:03.786Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : AddOrUpdateReason : service updated&#10;" timestamp="2022-11-02T20:51:42.434Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : AddOrUpdateReason : service updated&#10;" timestamp="2022-11-02T21:01:46.925Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UpdateUtilizationEventRecord : service added&#10;" timestamp="2022-11-03T13:44:29.261Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : AddUtilizationRecord : service added&#10;" timestamp="2022-11-03T13:57:27.407Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : DeleteUtilizationRecords : service added&#10;" timestamp="2022-11-03T13:59:24.041Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetMachineCodeRecord : service added&#10;" timestamp="2022-11-10T20:55:31.237Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetElapsedTime : service added&#10;" timestamp="2022-11-10T22:13:28.466Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UtilizationRecordsPassThrough : service added&#10;" timestamp="2022-11-10T22:22:52.314Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetUtilizationRecordsByMachine : service added&#10;" timestamp="2022-11-10T22:51:03.528Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetAggregatesByUtilizationState : service added&#10;" timestamp="2022-11-10T22:54:28.087Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetStatsForAggregateData : service added&#10;" timestamp="2022-11-10T22:56:22.252Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetMachineUtilization : service added&#10;" timestamp="2022-11-10T23:08:57.890Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetStatsForAggregateData : service updated&#10;" timestamp="2022-11-11T18:57:17.572Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetStatsForAggregateData : service updated&#10;" timestamp="2022-11-11T19:00:13.859Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="subscriptions : UtilizationDataPurge : added&#10;" timestamp="2022-11-11T20:27:30.243Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetEventDataPriorToMachineTimeStamp : service added&#10;" timestamp="2022-11-12T17:29:40.064Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetEventDataPriorToMachineTimeStamp : service updated&#10;" timestamp="2022-11-12T18:04:09.067Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetMachineCodesByEquipment : service added&#10;" timestamp="2022-11-29T20:44:24.200Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetReasonGroups : service added&#10;" timestamp="2022-11-29T20:46:54.638Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetReasonGroupsByUtilizationState : service added&#10;" timestamp="2022-11-29T20:50:24.842Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetReasonGroupsByUtilizationState : service updated&#10;" timestamp="2022-11-29T20:54:07.480Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetReasonGroupsByUtilizationState : service updated&#10;" timestamp="2022-11-29T20:56:51.553Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetReasonsByReasonGroup : service added&#10;" timestamp="2022-11-29T21:00:03.236Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetReasonsByReasonGroupAndUtilizationState : service added&#10;" timestamp="2022-11-29T21:02:14.098Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetUtilizationStates : service added&#10;" timestamp="2022-11-29T21:05:24.402Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetUtilizationRecords : service added&#10;" timestamp="2022-11-30T21:37:45.204Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetUtilizationRecordsSumAvgCount : service added&#10;" timestamp="2022-11-30T22:00:27.163Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetMachineListingWithDates : service added&#10;" timestamp="2022-11-30T22:05:58.156Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetMachineListingWithProperties : service added&#10;" timestamp="2022-11-30T22:08:30.461Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetReasonRowNumber : service added&#10;" timestamp="2022-11-30T22:09:46.693Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetStartEndDates : service added&#10;" timestamp="2022-11-30T22:11:23.318Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetFilteredUtilizationRecords : service added&#10;" timestamp="2022-11-30T22:13:46.023Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetFilteredUtilizationDataAndStats : service added&#10;" timestamp="2022-11-30T22:15:42.174Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetUtilizationOverview : service added&#10;" timestamp="2022-11-30T22:17:52.639Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetUtilizationOverviewForMachine : service added&#10;" timestamp="2022-11-30T22:19:05.276Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetAggregatesByUtilizationReason : service added&#10;" timestamp="2022-12-01T01:19:09.621Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetUtilizationStates : service updated&#10;" timestamp="2022-12-02T16:17:33.052Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetReasonGroups : service updated&#10;" timestamp="2022-12-02T16:25:28.539Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetReasonsByReasonGroup : service updated&#10;" timestamp="2022-12-02T16:28:58.241Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetReasonsByReasonGroup : service updated&#10;" timestamp="2022-12-02T16:31:01.946Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetMachineUtilization : service updated&#10;" timestamp="2022-12-13T22:27:14.185Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetMachineUtilization : service updated&#10;" timestamp="2022-12-13T22:48:31.159Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetUtilizationScheduleData : service added&#10;" timestamp="2022-12-16T14:11:01.624Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetUtilizationScheduleData : service updated&#10;" timestamp="2022-12-16T14:34:11.115Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetUtilizationScheduleData : service updated&#10;" timestamp="2022-12-21T21:05:29.854Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UtilizationScheduleDataPassThrough : service added&#10;" timestamp="2022-12-21T21:15:00.195Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UtilizationStatisticsPassThrough : service added&#10;" timestamp="2023-01-26T00:44:31.376Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UtilizationAggregatesPassThrough : service added&#10;" timestamp="2023-01-26T14:50:28.991Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-11-01T13:36:43.013Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddConfigurationTableDefinition" timestamp="2023-11-02T12:24:25.540Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2023-11-02T12:24:55.753Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="" timestamp="2023-11-02T12:24:55.776Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddConfigurationTableDefinition" timestamp="2023-11-02T12:31:02.074Z" user="Administrator"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2023-11-02T12:31:46.031Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="" timestamp="2023-11-02T12:31:46.061Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="configuration : UtilizationConfiguration : added&#10;" timestamp="2023-11-02T12:54:50.459Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetStartEndDates : service updated&#10;" timestamp="2023-11-02T13:20:40.414Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetStartEndDates : service updated&#10;" timestamp="2023-11-02T14:07:43.405Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.593Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.601Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetStartEndDates : service updated&#10;" timestamp="2023-12-07T16:28:16.528Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetStartEndDates : service updated&#10;" timestamp="2023-12-07T19:59:06.174Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetMachineListingWithDates : service updated&#10;" timestamp="2023-12-07T21:20:15.857Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetMachineCodesByEquipment : service updated&#10;" timestamp="2023-12-11T21:20:59.553Z" user="Administrator"/></ConfigurationChanges></ThingTemplate><ThingTemplate aspect.isSystemObject="false" baseThingTemplate="PTCSC.Utilization.EntryPoint_TT" description="Implementation of PTCSC.Utilization using ThingWorx data objects" documentationContent="" effectiveThingPackage="ConfiguredThing" homeMashup="" inheritedValueStream="" lastModifiedDate="2023-11-30T19:04:01.573Z" name="PTCSC.UtilizationTWImpl.EntryPoint_TT" projectName="PTCSC.UtilizationTWImpl" tags="" thingPackage="" valueStream=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR" type="Organization"/><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR:PTCSC.UtilizationTWImpl.Admin_UG" type="OrganizationalUnit"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Configuration table to store the components core manager" isMultiRow="true" name="ComponentManager" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="unique identifier for the manager that needs to be configured" name="id" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" aspect.thingShape="PTC.Base.CommonManagement_TS" baseType="THINGNAME" description="Name of the Manager Thing to be configured" name="managerThingName" ordinal="2"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable></ConfigurationTables><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations/><ThingShape><PropertyDefinitions/><ServiceDefinitions/><EventDefinitions/><ServiceMappings/><ServiceImplementations/><Subscriptions/></ThingShape><ImplementedShapes/><SharedConfigurationTables/><InstanceDesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></InstanceDesignTimePermissions><InstanceRunTimePermissions/><InstanceVisibilityPermissions><Visibility/></InstanceVisibilityPermissions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="Created Programmatically" timestamp="2022-10-28T19:44:04.485Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCSC.UtilizationTWImpl]" timestamp="2022-10-28T19:44:04.536Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-11-01T13:36:43.011Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.571Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.574Z" user="Administrator"/></ConfigurationChanges></ThingTemplate></ThingTemplates><ExtensionPackages/><Organizations><Organization description="" documentationContent="" homeMashup="" lastModifiedDate="2023-11-30T19:04:01.558Z" loginButtonStyle="" loginPrompt="" loginResetPassword="false" loginStyle="" mobileMashup="" name="PTCSC.UtilizationTWImpl.Default_OR" projectName="PTCSC.UtilizationTWImpl" resetMailContent="&lt;p&gt;[[resetemail.requestmade]]&lt;/p&gt;&lt;p&gt;[[resetemail.instructions]]&lt;/p&gt;&lt;p&gt;[[resetemail.helpneeded]]&lt;/p&gt;" resetMailServer="" resetMailSubject="[[resetemail.subject]]" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR" type="Organization"/><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR:PTCSC.UtilizationTWImpl.Admin_UG" type="OrganizationalUnit"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><loginImage/><Connections><Connection from="" to="Root"/><Connection from="Root" to="PTCSC.UtilizationTWImpl.Admin_UG"/><Connection from="Root" to="PTCSC.UtilizationTWImpl.Default_UG"/></Connections><OrganizationalUnits><OrganizationalUnit description="" name="PTCSC.UtilizationTWImpl.Admin_UG"><Members><Members><Member name="PTCSC.UtilizationTWImpl.Admin_UG" type="Group"/></Members></Members></OrganizationalUnit><OrganizationalUnit description="" name="PTCSC.UtilizationTWImpl.Default_UG"><Members><Members><Member name="PTCSC.UtilizationTWImpl.Default_UG" type="Group"/></Members></Members></OrganizationalUnit><OrganizationalUnit description="" name="Root"><Members><Members/></Members></OrganizationalUnit></OrganizationalUnits><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="Created Programmatically" timestamp="2022-10-28T19:44:04.538Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCSC.UtilizationTWImpl]" timestamp="2022-10-28T19:44:04.548Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-11-01T13:36:43.010Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.556Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.559Z" user="Administrator"/></ConfigurationChanges></Organization></Organizations><Menus/><ThingGroups/><Resources/><DataTags/><ThingShapes><ThingShape aspect.isSystemObject="false" className="" description="Implementation of PTCSC.Utilization using ThingWorx data objects" documentationContent="" homeMashup="" lastModifiedDate="2023-11-30T19:04:01.583Z" name="PTCSC.UtilizationTWImpl.Management_TS" projectName="PTCSC.UtilizationTWImpl" tags=""><PropertyDefinitions/><ServiceDefinitions/><EventDefinitions/><ServiceMappings/><ServiceImplementations/><Subscriptions/><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR" type="Organization"/><Principal isPermitted="true" name="PTCSC.UtilizationTWImpl.Default_OR:PTCSC.UtilizationTWImpl.Admin_UG" type="OrganizationalUnit"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations/><InstanceRunTimePermissions/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="Created Programmatically" timestamp="2022-10-28T19:44:04.501Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCSC.UtilizationTWImpl]" timestamp="2022-10-28T19:44:04.525Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-11-01T13:36:43.010Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.581Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="AddVisibilityPermission" timestamp="2023-11-30T19:04:01.584Z" user="Administrator"/></ConfigurationChanges></ThingShape></ThingShapes><Subsystems/><NotificationContents/></Entities>